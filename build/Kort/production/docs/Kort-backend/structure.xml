<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="kort - Backend">
  <file path="oauth2callback\google\index.php" hash="7ac2a3c87465451005c4fa2cea28b4d9" package="Default">
    <docblock line="2">
      <description>kort - The OAuth callback for Google</description>
      <long-description></long-description>
    </docblock>
    <include line="7" type="Require Once" package="Default">
      <name>../../../lib/google-api-php-client/src/Google_Client.php</name>
      <docblock line="6">
        <description>Load the Google API Client</description>
        <long-description></long-description>
      </docblock>
    </include>
    <include line="9" type="Require Once" package="Default">
      <name>../../../lib/google-api-php-client/src/contrib/Google_Oauth2Service.php</name>
      <docblock line="8">
        <description>Load the Google OAuth 2.0 service</description>
        <long-description></long-description>
      </docblock>
    </include>
    <include line="11" type="Require Once" package="Default">
      <name>../../php/ClassLoader.php</name>
      <docblock line="10">
        <description>Load the ClassLoader</description>
        <long-description></long-description>
      </docblock>
    </include>
  </file>
  <file path="oauth2callback\index.php" hash="391d04fb56f3b43e4fcc1780a7f04293" package="Default">
    <docblock line="2">
      <description>kort - The OAuth callback for Google</description>
      <long-description></long-description>
    </docblock>
    <include line="7" type="Require Once" package="Default">
      <name>../../lib/google-api-php-client/src/Google_Client.php</name>
      <docblock line="6">
        <description>Load the Google API Client</description>
        <long-description></long-description>
      </docblock>
    </include>
    <include line="9" type="Require Once" package="Default">
      <name>../../lib/google-api-php-client/src/contrib/Google_Oauth2Service.php</name>
      <docblock line="8">
        <description>Load the Google OAuth 2.0 service</description>
        <long-description></long-description>
      </docblock>
    </include>
    <include line="11" type="Require Once" package="Default">
      <name>../php/ClassLoader.php</name>
      <docblock line="10">
        <description>Load the ClassLoader</description>
        <long-description></long-description>
      </docblock>
    </include>
  </file>
  <file path="oauth2callback\osm\authorize.php" hash="7bc37c523db603c6c41fcd4cb3c41cb0" package="Default">
    <docblock line="2">
      <description>kort - This script redirects to the authorize URL of OpenStreetMap</description>
      <long-description></long-description>
    </docblock>
    <include line="7" type="Require Once" package="Default">
      <name>../../../lib/oauth-php/library/OAuthStore.php</name>
      <docblock line="6">
        <description>Load the PHP OAuth store</description>
        <long-description></long-description>
      </docblock>
    </include>
    <include line="10" type="Require Once" package="Default">
      <name>../../../lib/oauth-php/library/OAuthRequester.php</name>
      <docblock line="9">
        <description>Load the PHP OAuth requester</description>
        <long-description></long-description>
      </docblock>
    </include>
    <include line="13" type="Require Once" package="Default">
      <name>../../php/ClassLoader.php</name>
      <docblock line="12">
        <description>Load the ClassLoader</description>
        <long-description></long-description>
      </docblock>
    </include>
    <include line="17" type="Require Once" package="Default">
      <name/>
      <docblock line="16">
        <description>Load the secrets</description>
        <long-description></long-description>
      </docblock>
    </include>
  </file>
  <file path="oauth2callback\osm\index.php" hash="a0cb4e6c9667f240ceaf57e9b553bdda" package="Default">
    <docblock line="2">
      <description>kort - The OAuth callback for OpenStreetMap</description>
      <long-description></long-description>
    </docblock>
    <include line="7" type="Require Once" package="Default">
      <name>../../../lib/oauth-php/library/OAuthStore.php</name>
      <docblock line="6">
        <description>Load the PHP OAuth store</description>
        <long-description></long-description>
      </docblock>
    </include>
    <include line="10" type="Require Once" package="Default">
      <name>../../../lib/oauth-php/library/OAuthRequester.php</name>
      <docblock line="9">
        <description>Load the PHP OAuth requester</description>
        <long-description></long-description>
      </docblock>
    </include>
    <include line="13" type="Require Once" package="Default">
      <name>../../php/ClassLoader.php</name>
      <docblock line="12">
        <description>Load the ClassLoader</description>
        <long-description></long-description>
      </docblock>
    </include>
    <include line="17" type="Require Once" package="Default">
      <name/>
      <docblock line="16">
        <description>Load the secrets</description>
        <long-description></long-description>
      </docblock>
    </include>
  </file>
  <file path="oauth2callback\osm\secret_kort-dev.php" hash="e1ed0040a25c998c221add1453413824" package="Default">
    <docblock line="2">
      <description>kort - The consumer key and secret for OpenStreetMap OAuth (kort-dev)</description>
      <long-description></long-description>
    </docblock>
  </file>
  <file path="oauth2callback\osm\secret_kort.php" hash="fcff78ad072a645d12cb6c3079af993a" package="Default">
    <docblock line="2">
      <description>kort - The consumer key and secret for OpenStreetMap OAuth (kort)</description>
      <long-description></long-description>
    </docblock>
  </file>
  <file path="oauth2callback\osm\secret_localhost.php" hash="418f7b7d0e34dde0b0ee3e44c5de0042" package="Default">
    <docblock line="2">
      <description>kort - The consumer key and secret for OpenStreetMap OAuth (localhost)</description>
      <long-description></long-description>
    </docblock>
  </file>
  <file path="php\ClassLoader.php" hash="39dd9fe1f692807e8f6fc12c0e0d41ef" package="Default">
    <docblock line="2">
      <description>kort - the ClassLoader class</description>
      <long-description></long-description>
    </docblock>
    <include line="39" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="51" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="62" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="63" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="64" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="67" type="Require Once" package="Default">
      <name>Mockery/Loader.php</name>
    </include>
    <include line="68" type="Require Once" package="Default">
      <name>Hamcrest/Hamcrest.php</name>
    </include>
    <include line="87" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="89" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Kort" line="24" package="Default">
      <extends/>
      <name>ClassLoader</name>
      <full_name>\Kort\ClassLoader</full_name>
      <docblock line="10">
        <description>The ClassLoader class is used throughout the application to locate classes.</description>
        <long-description>&lt;p&gt;Therefore this classloader is registered and used at runtime whenever a
unknown class is used for the first time. Initially some libraries are loaded
to be available immediatly. For all further classes the Namespace hierarchy
is assumed to reflect in the folder structure, the classes are loaded accordingly.&lt;/p&gt;

&lt;p&gt;This means that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The namespace of a class must match the path of the file&lt;/li&gt;
  &lt;li&gt;Filenames and class names &lt;b&gt;must&lt;/b&gt; match&lt;/li&gt;
&lt;/ul&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Kort" line="35" package="Default">
        <name>autoload</name>
        <full_name>autoload</full_name>
        <docblock line="26">
          <description>This function is called whenever a yet unknown class is requested.</description>
          <long-description>&lt;p&gt;If the class is found it get loaded immediately.&lt;/p&gt;</long-description>
          <tag line="26" name="param" description="Name of the requested class." type="string" variable="$className">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$className</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Kort" line="48" package="Default">
        <name>loadLibraries</name>
        <full_name>loadLibraries</full_name>
        <docblock line="43">
          <description>Loads common libraries at startup.</description>
          <long-description></long-description>
          <tag line="43" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Kort" line="59" package="Default">
        <name>loadTestLibraries</name>
        <full_name>loadTestLibraries</full_name>
        <docblock line="54">
          <description>Loads test libraries.</description>
          <long-description></long-description>
          <tag line="54" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Kort" line="84" package="Default">
        <name>importClass</name>
        <full_name>importClass</full_name>
        <docblock line="73">
          <description>Imports a class by name or path.</description>
          <long-description>&lt;p&gt;The full path is either provided in the $path argument or
constructued using the $path and $className.&lt;/p&gt;</long-description>
          <tag line="73" name="param" description="The path to the class." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="73" name="param" description="The name of the class." type="string" variable="$className">
            <type by_reference="false">string</type>
          </tag>
          <tag line="73" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="84">
          <name>$className</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Kort" line="100" package="Default">
        <name>registerAutoLoader</name>
        <full_name>registerAutoLoader</full_name>
        <docblock line="93">
          <description>This method must be called by a client in order to use the ClassLoader.</description>
          <long-description></long-description>
          <tag line="93" name="param" description="Indicates the environment of the ClassLoader." type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="93" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$mode</name>
          <default>"production"</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Helper\CurlHelper.php" hash="3e0d5331525cd70cccd0766307191e18" package="Default">
    <docblock line="2">
      <description>kort - Helper\CurlHelper class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Helper" line="12" package="Default">
      <extends/>
      <name>CurlHelper</name>
      <full_name>\Helper\CurlHelper</full_name>
      <docblock line="7">
        <description>The CurlHelper class is a wrapper around the curl function of PHP.</description>
        <long-description>&lt;p&gt;It is used to simplify the access to these functions and to easily mock for testing.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="19" namespace="Helper" package="Default">
        <name>$curl</name>
        <default></default>
        <docblock line="14">
          <description>The curl handler on which all functions are applied.</description>
          <long-description></long-description>
          <tag line="14" name="var" description="the current curl connection" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="24" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="21">
          <description>Creates a new instance of CurlHelper.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="37" package="Default">
        <name>setOption</name>
        <full_name>setOption</full_name>
        <docblock line="29">
          <description>Sets a curl option.</description>
          <long-description></long-description>
          <tag line="29" name="param" description="A curl option." type="integer" variable="$option">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="29" name="param" description="The corresponding value." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="29" name="return" description="true on success or false on failure." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$option</name>
          <default></default>
          <type/>
        </argument>
        <argument line="37">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="47" package="Default">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="42">
          <description>Executes the configured curl request.</description>
          <long-description></long-description>
          <tag line="42" name="return" description="the result on success, false on failure." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="57" package="Default">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="52">
          <description>Closes the connection to the remote site.</description>
          <long-description></long-description>
          <tag line="52" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="php\Helper\GravatarHelper.php" hash="01f6add0427d047719c39440ad945591" package="Default">
    <docblock line="2">
      <description>kort - Helper\GravatarHelper class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Helper" line="10" package="Default">
      <extends/>
      <name>GravatarHelper</name>
      <full_name>\Helper\GravatarHelper</full_name>
      <docblock line="7">
        <description>The GravatarHelper class is a helper to get Gravatar pictures.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Helper" line="23" package="Default">
        <name>getGravatarUrl</name>
        <full_name>getGravatarUrl</full_name>
        <docblock line="12">
          <description>Get either a Gravatar URL or complete image tag for a specified email address.</description>
          <long-description></long-description>
          <tag line="12" name="param" description="The email address of the user." type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="12" name="param" description="Size in pixels, defaults to 200px [ 1 - 2048 ]." type="integer" variable="$size">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="12" name="param" description="Default imageset to use [ 404 | mm | identicon | monsterid | wavatar ]." type="string" variable="$imageSet">
            <type by_reference="false">string</type>
          </tag>
          <tag line="12" name="param" description="Maximum rating (inclusive) [ g | pg | r | x ]." type="string" variable="$rating">
            <type by_reference="false">string</type>
          </tag>
          <tag line="12" name="return" description="containing the URL" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="12" name="link" description="http://gravatar.com/site/implement/images/php/" link="http://gravatar.com/site/implement/images/php/"/>
        </docblock>
        <argument line="23">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
        <argument line="23">
          <name>$size</name>
          <default>200</default>
          <type/>
        </argument>
        <argument line="23">
          <name>$imageSet</name>
          <default>'mm'</default>
          <type/>
        </argument>
        <argument line="23">
          <name>$rating</name>
          <default>'r'</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Helper\HttpHelper.php" hash="a19215d6b191fe72d82b2f3509e67094" package="Default">
    <docblock line="2">
      <description>kort - Helper\HttpHelper class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Helper" line="12" package="Default">
      <extends/>
      <name>HttpHelper</name>
      <full_name>\Helper\HttpHelper</full_name>
      <docblock line="7">
        <description>The HttpHelper class is a helper class for common http requests.</description>
        <long-description>&lt;p&gt;Currently GET, POST and PUT are supported.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="19" namespace="Helper" package="Default">
        <name>$curl</name>
        <default></default>
        <docblock line="14">
          <description>A wrapper object around the curl functions.</description>
          <long-description></long-description>
          <tag line="14" name="var" description="" type="\Helper\CurlHelper">
            <type by_reference="false">\Helper\CurlHelper</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="24" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="21">
          <description>Creates a new instance of HttpHelper.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="37" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="29">
          <description>Makes a GET request to the given url with the given data.</description>
          <long-description></long-description>
          <tag line="29" name="param" description="The url of the request." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="param" description="The data to send along with this request." type="array|string" variable="$data">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="return" description="Returns the servers response" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="37">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="50" package="Default">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="42">
          <description>Makes a PUT request to the given url with the given data.</description>
          <long-description></long-description>
          <tag line="42" name="param" description="The url of the request." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="param" description="The data to send along with this request." type="array|string" variable="$data">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="return" description="Returns the servers response" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="50">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="63" package="Default">
        <name>post</name>
        <full_name>post</full_name>
        <docblock line="55">
          <description>Makes a POST request to the given url with the given data.</description>
          <long-description></long-description>
          <tag line="55" name="param" description="The url of the request." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="param" description="The data to send along with this request." type="array|string" variable="$data">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="return" description="Returns the servers response" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="63">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="76" package="Default">
        <name>setOption</name>
        <full_name>setOption</full_name>
        <docblock line="68">
          <description>Sets a curl option.</description>
          <long-description></long-description>
          <tag line="68" name="param" description="A curl option." type="integer" variable="$option">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="68" name="param" description="The corresponding value." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="68" name="return" description="true on success or false on failure." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$option</name>
          <default></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Helper" line="90" package="Default">
        <name>request</name>
        <full_name>request</full_name>
        <docblock line="81">
          <description>Make a request to the database webservice.</description>
          <long-description></long-description>
          <tag line="81" name="param" description="The HTTP method to use [POST, PUT, GET]." type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="param" description="The URL to send the request to." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="param" description="The data to send along with the request." type="array|string" variable="$data">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="return" description="the answer from the database webservice" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="90">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="90">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Helper\LocaleHelper.php" hash="9405feeb4df7aa9f7782d0c155190eea" package="Default">
    <docblock line="2">
      <description>kort - Helper\LocaleHelper class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Helper" line="13" package="Default">
      <extends/>
      <name>LocaleHelper</name>
      <full_name>\Helper\LocaleHelper</full_name>
      <docblock line="8">
        <description>The LocaleHelper class helps to translate text in the application.</description>
        <long-description>&lt;p&gt;All text must be provided in a *.props file containing the key and the translation.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="20" namespace="Helper" package="Default">
        <name>$supported_langs</name>
        <default>array("de", "en-US")</default>
        <docblock line="15">
          <description>Defines all currently supported languages.</description>
          <long-description></long-description>
          <tag line="15" name="var" description="" type="\Helper\array(string)">
            <type by_reference="false">\Helper\array(string)</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="26" namespace="Helper" package="Default">
        <name>$properties</name>
        <default>array()</default>
        <docblock line="21">
          <description>The properties array are the core of this class, it contains all available translation.</description>
          <long-description></long-description>
          <tag line="21" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="Helper" package="Default">
        <name>$language</name>
        <default></default>
        <docblock line="28">
          <description>The detected or requested lanugage.</description>
          <long-description></long-description>
          <tag line="28" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="41" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="35">
          <description>Creates a new instance of LocaleHelper.</description>
          <long-description></long-description>
          <tag line="35" name="param" description="The requested language." type="string" variable="$lang">
            <type by_reference="false">string</type>
          </tag>
          <tag line="35" name="param" description="Defines a specific *.props file to use." type="string" variable="$localeFile">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$lang</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="41">
          <name>$localeFile</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="62" package="Default">
        <name>getValue</name>
        <full_name>getValue</full_name>
        <docblock line="55">
          <description>Returns the traslated value if available.</description>
          <long-description></long-description>
          <tag line="55" name="param" description="An entry in the props file." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="return" description="the translated string if available, $key otherwise" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Helper" line="77" package="Default">
        <name>guessLang</name>
        <full_name>guessLang</full_name>
        <docblock line="70">
          <description>This function tries to guess the best translation for the user.</description>
          <long-description>&lt;p&gt;This is based on the users browser settings and the available languages.&lt;/p&gt;</long-description>
          <tag line="70" name="return" description="the guessed language or empty string if it can not be detected." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Helper" line="94" package="Default">
        <name>getUserLanguages</name>
        <full_name>getUserLanguages</full_name>
        <docblock line="89">
          <description>Returns the accepted languages of the users with priority.</description>
          <long-description></long-description>
          <tag line="89" name="return" description="all supported languages of the user sorted by priority" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Helper" line="123" package="Default">
        <name>parseFile</name>
        <full_name>parseFile</full_name>
        <docblock line="116">
          <description>Reads a *.props file and saves the content in $properties.</description>
          <long-description></long-description>
          <tag line="116" name="param" description="The filename of the *.props file." type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="116" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Helper\PgHelper.php" hash="e44ce95a1a8993de6e0de927e2921392" package="Default">
    <docblock line="2">
      <description>kort - Helper\PgHelper class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Helper" line="13" package="Default">
      <extends/>
      <name>PgHelper</name>
      <full_name>\Helper\PgHelper</full_name>
      <docblock line="8">
        <description>THe PgHelper class is a wrapper around the various pg_* function of PHP.</description>
        <long-description>&lt;p&gt;This makes it easier to access them, and can be used for testing by mocking this class.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="20" namespace="Helper" package="Default">
        <name>$dbConn</name>
        <default></default>
        <docblock line="15">
          <description>A PostgreSQL database connection.</description>
          <long-description></long-description>
          <tag line="15" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="27" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="22">
          <description>Creates a new PgHelper object and connects to the database using the $connectionString.</description>
          <long-description></long-description>
          <tag line="22" name="param" description="Details how to connect to the database." type="string" variable="$connectionString">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$connectionString</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="39" package="Default">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="32">
          <description>Run a query against the database.</description>
          <long-description></long-description>
          <tag line="32" name="param" description="Arbitrary sql statement." type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="32" name="return" description="the result of the query" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="59" package="Default">
        <name>prepare</name>
        <full_name>prepare</full_name>
        <docblock line="49">
          <description>Prepares a statement before it is run on the database.</description>
          <long-description>&lt;p&gt;This can be used for security or performance issues.&lt;/p&gt;</long-description>
          <tag line="49" name="param" description="The name of the statement." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="param" description="The sql statement to prepare." type="string" variable="$preparedStatement">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="59">
          <name>$preparedStatement</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="72" package="Default">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="64">
          <description>Executes a previoulsy prepared query.</description>
          <long-description></long-description>
          <tag line="64" name="param" description="The name of the query." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="param" description="An array containing substitustions for the bind variables." type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="64" name="return" description="a query resource on success, false otherwise." type="resource|false">
            <type by_reference="false">resource</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="72">
          <name>$parameter</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="84" package="Default">
        <name>fetchRow</name>
        <full_name>fetchRow</full_name>
        <docblock line="77">
          <description>Fetches a row from the database based on a query resource.</description>
          <long-description></long-description>
          <tag line="77" name="param" description="Query result resource." type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="77" name="return" description="the response form the database" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="94" package="Default">
        <name>begin</name>
        <full_name>begin</full_name>
        <docblock line="89">
          <description>Begin a transation.</description>
          <long-description></long-description>
          <tag line="89" name="return" description="a query resource on success, false otherwise" type="resource|false">
            <type by_reference="false">resource</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="104" package="Default">
        <name>commit</name>
        <full_name>commit</full_name>
        <docblock line="99">
          <description>Commit a transation.</description>
          <long-description></long-description>
          <tag line="99" name="return" description="a query resource on success, false otherwise" type="resource|false">
            <type by_reference="false">resource</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="114" package="Default">
        <name>rollback</name>
        <full_name>rollback</full_name>
        <docblock line="109">
          <description>Rollback a transation.</description>
          <long-description></long-description>
          <tag line="109" name="return" description="a query resource on success, false otherwise" type="resource|false">
            <type by_reference="false">resource</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="124" package="Default">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="119">
          <description>Closes the datbase connection.</description>
          <long-description></long-description>
          <tag line="119" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="php\Helper\PostGisSqlHelper.php" hash="8dc619ee57272c958ae49fe2eecb24c7" package="Default">
    <docblock line="2">
      <description>kort - Helper\PostGisSqlHelper class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Helper" line="13" package="Default">
      <extends/>
      <name>PostGisSqlHelper</name>
      <full_name>\Helper\PostGisSqlHelper</full_name>
      <docblock line="8">
        <description>The PostGisSqlHelper class is a helper for PostGIS, the geospatial extension of PostGreSQL.</description>
        <long-description>&lt;p&gt;It's intend is to simplify the SQL queries in the application and hide the complexity here.&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Helper" line="23" package="Default">
        <name>getLatLngGeom</name>
        <full_name>getLatLngGeom</full_name>
        <docblock line="15">
          <description>Returns the PostGIS functions to convert lat/lng to a point.</description>
          <long-description></long-description>
          <tag line="15" name="param" description="Value of latitude in WSG84." type="float" variable="$lat">
            <type by_reference="false">float</type>
          </tag>
          <tag line="15" name="param" description="Value of longitude in WSG84." type="float" variable="$lng">
            <type by_reference="false">float</type>
          </tag>
          <tag line="15" name="return" description="a piece of PostGIS sql to represent a coordinate" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="23">
          <name>$lat</name>
          <default></default>
          <type/>
        </argument>
        <argument line="23">
          <name>$lng</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Helper\SecretGenerator.php" hash="c8cbc648ddc3ba131bc9cd4e85622302" package="Default">
    <docblock line="2">
      <description>kort - Helper\SecretGenerator class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Helper" line="15" package="Default">
      <extends/>
      <name>SecretGenerator</name>
      <full_name>\Helper\SecretGenerator</full_name>
      <docblock line="8">
        <description>The SecretGenerator class is responsible to generate unique user secrets.</description>
        <long-description>&lt;p&gt;This secret is used to initially identify a user in the application.&lt;/p&gt;

&lt;p&gt;The used algorithm is a double-salted SHA-1 hash based on the time.&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="22" package="Default">
        <name>getSecret</name>
        <full_name>getSecret</full_name>
        <docblock line="17">
          <description>Returns a unique secret to identify a user.</description>
          <long-description></long-description>
          <tag line="17" name="return" description="a double-salted SHA1 hash" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Helper" line="34" package="Default">
        <name>generateSalt</name>
        <full_name>generateSalt</full_name>
        <docblock line="29">
          <description>Randomly generates a salt value for the secret to use.</description>
          <long-description></long-description>
          <tag line="29" name="return" description="a random salt for the user secret" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="php\Helper\SlimHelper.php" hash="158b6bff989c3e677ed1fd3ddeeda686" package="Default">
    <docblock line="2">
      <description>kort - Helper\SlimHelper class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Helper" line="12" package="Default">
      <extends/>
      <name>SlimHelper</name>
      <full_name>\Helper\SlimHelper</full_name>
      <docblock line="7">
        <description>The SlimHelper class is a helper for the Slim Framework.</description>
        <long-description>&lt;p&gt;It provides common functions, which are used in the webservices.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="19" namespace="Helper" package="Default">
        <name>$app</name>
        <default></default>
        <docblock line="14">
          <description>The Slim application object.</description>
          <long-description></long-description>
          <tag line="14" name="var" description="" type="\Helper\Slim\Slim">
            <type by_reference="false">\Helper\Slim\Slim</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="26" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="21">
          <description>Creates a new instance of SlimHelper.</description>
          <long-description></long-description>
          <tag line="21" name="param" description="The Slim application object." type="mixed" variable="$app">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$app</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="40" package="Default">
        <name>returnData</name>
        <full_name>returnData</full_name>
        <docblock line="31">
          <description>Writes the provided data in the response.</description>
          <long-description>&lt;p&gt;This function takes care of if $data is empty or not.&lt;/p&gt;</long-description>
          <tag line="31" name="param" description="Data to return to the client in JSON-format." type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="55" package="Default">
        <name>checkUserId</name>
        <full_name>checkUserId</full_name>
        <docblock line="48">
          <description>Check if the provided $user_id matches the logged-in user.</description>
          <long-description></long-description>
          <tag line="48" name="param" description="The user id." type="mixed" variable="$user_id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="48" name="return" description="true if it's the logged in user, false otherwise." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$user_id</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Helper\StringHelper.php" hash="2ac3367ca0d40c2e69cf9d93eff0542c" package="Default">
    <docblock line="2">
      <description>kort - Helper\StringHelper class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Helper" line="11" package="Default">
      <extends/>
      <name>StringHelper</name>
      <full_name>\Helper\StringHelper</full_name>
      <docblock line="8">
        <description>The StringHelper class implements some common string functions.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Helper" line="21" package="Default">
        <name>endsWith</name>
        <full_name>endsWith</full_name>
        <docblock line="13">
          <description>Checks if $haystack ends with the string $needle.</description>
          <long-description></long-description>
          <tag line="13" name="param" description="The input string." type="string" variable="$haystack">
            <type by_reference="false">string</type>
          </tag>
          <tag line="13" name="param" description="The string to look for." type="string" variable="$needle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="13" name="return" description="true of $haystack ends with $needle" type="\Helper\booleam">
            <type by_reference="false">\Helper\booleam</type>
          </tag>
        </docblock>
        <argument line="21">
          <name>$haystack</name>
          <default></default>
          <type/>
        </argument>
        <argument line="21">
          <name>$needle</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Helper" line="34" package="Default">
        <name>startsWith</name>
        <full_name>startsWith</full_name>
        <docblock line="26">
          <description>Checks if $haystack start with $needle.</description>
          <long-description></long-description>
          <tag line="26" name="param" description="The input string." type="string" variable="$haystack">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="param" description="The string to look for." type="string" variable="$needle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="return" description="true if $haystack starts with $needle, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$haystack</name>
          <default></default>
          <type/>
        </argument>
        <argument line="34">
          <name>$needle</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Model\Badge.php" hash="1c11e7c485c4e810a2b91513499b3314" package="Default">
    <docblock line="2">
      <description>kort - Model\Badge class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Model" line="13" package="Default">
      <extends/>
      <name>Badge</name>
      <full_name>\Model\Badge</full_name>
      <docblock line="8">
        <description>The Badge class represents an achievment, that user can win.</description>
        <long-description>&lt;p&gt;It is part of the reward that user gets for playing kort.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="20" namespace="Model" package="Default">
        <name>$name</name>
        <default></default>
        <docblock line="15">
          <description>The name of the badge.</description>
          <long-description></long-description>
          <tag line="15" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="27" namespace="Model" package="Default">
        <name>$create_date</name>
        <default></default>
        <docblock line="22">
          <description>The date when this badge has been given to the user.</description>
          <long-description></long-description>
          <tag line="22" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="35" namespace="Model" package="Default">
        <name>$names</name>
        <default>array(1 =&gt; 'highscore_place_1', 2 =&gt; 'highscore_place_2', 3 =&gt; 'highscore_place_3', 4 =&gt; 'fix_count_100', 5 =&gt; 'fix_count_50', 6 =&gt; 'fix_count_10', 7 =&gt; 'vote_count_1000', 8 =&gt; 'vote_count_100', 9 =&gt; 'vote_count_10', 10 =&gt; 'fix_count_1', 11 =&gt; 'vote_count_1')</default>
        <docblock line="30">
          <description>The array of all names and ids of all badges.</description>
          <long-description></long-description>
          <tag line="30" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Model" line="57" package="Default">
        <name>findById</name>
        <full_name>findById</full_name>
        <docblock line="49">
          <description>Returns a new Badge object for the given $id.</description>
          <long-description></long-description>
          <tag line="49" name="param" description="The id of a badge." type="integer" variable="$id">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="49" name="return" description="a new Badge object identified by $id&#13;&#10;or null if not found" type="\Model\Badge|null">
            <type by_reference="false">\Model\Badge</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Model" line="72" package="Default">
        <name>getValues</name>
        <full_name>getValues</full_name>
        <docblock line="65">
          <description>Returns an array of values of the given badges.</description>
          <long-description></long-description>
          <tag line="65" name="param" description="Values should be returned." type="array" variable="$badges">
            <type by_reference="false">array</type>
          </tag>
          <tag line="65" name="return" description="array of values of the given badges" type="\Model\an">
            <type by_reference="false">\Model\an</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$badges</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="Model" line="84" package="Default">
        <name>getValue</name>
        <full_name>getValue</full_name>
        <docblock line="77">
          <description>Returns an array of properties representing the 'value' of a badge.</description>
          <long-description></long-description>
          <tag line="77" name="param" description="Value should be returned." type="\Model\Badge" variable="$badge">
            <type by_reference="false">\Model\Badge</type>
          </tag>
          <tag line="77" name="return" description="array of values of the given badges" type="\Model\an">
            <type by_reference="false">\Model\an</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$badge</name>
          <default></default>
          <type>\Model\Badge</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Model" line="94" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="89">
          <description>Creates a new instance of Badge.</description>
          <long-description></long-description>
          <tag line="89" name="param" description="The name of the badge." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Model" line="104" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="99">
          <description>Returns the badge's name.</description>
          <long-description></long-description>
          <tag line="99" name="return" description="containing the badge's name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Model" line="114" package="Default">
        <name>getCreateDate</name>
        <full_name>getCreateDate</full_name>
        <docblock line="109">
          <description>Returns the date when this badge has been given to the user.</description>
          <long-description></long-description>
          <tag line="109" name="return" description="containing the date when this badge has been given to the user" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Model" line="126" package="Default">
        <name>setCreateDate</name>
        <full_name>setCreateDate</full_name>
        <docblock line="119">
          <description>Sets the date when this badge has been given to the user.</description>
          <long-description></long-description>
          <tag line="119" name="param" description="The date when this badge has been given to the user." type="string" variable="$createDate">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$createDate</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="29">get rid of this array, query the database instead</todo>
    </markers>
  </file>
  <file path="php\Model\Reward.php" hash="9f1d90994fdd68701552270f38b5c6f1" package="Default">
    <docblock line="2">
      <description>kort - Reward class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Model" line="12" package="Default">
      <extends/>
      <name>Reward</name>
      <full_name>\Model\Reward</full_name>
      <docblock line="7">
        <description>The Reward class represents the entity, which a user can win.</description>
        <long-description>&lt;p&gt;A reward may contain an amount of koins and one or more badges.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="19" namespace="Model" package="Default">
        <name>$badges</name>
        <default>array()</default>
        <docblock line="14">
          <description>Array of badges.</description>
          <long-description></long-description>
          <tag line="14" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="26" namespace="Model" package="Default">
        <name>$koinCount</name>
        <default>0</default>
        <docblock line="21">
          <description>Amount of koins.</description>
          <long-description></long-description>
          <tag line="21" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Model" line="35" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="28">
          <description>Creates a new instance of Reward.</description>
          <long-description></long-description>
          <tag line="28" name="param" description="Amount of koins that the user has." type="integer" variable="$koinCountTotal">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="28" name="param" description="Amount of koins for this Reward." type="integer" variable="$koinCountNew">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="28" name="param" description="Array of Badges of this Reward." type="array" variable="$badges">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$koinCountTotal</name>
          <default></default>
          <type/>
        </argument>
        <argument line="35">
          <name>$koinCountNew</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="35">
          <name>$badges</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Model" line="47" package="Default">
        <name>toJson</name>
        <full_name>toJson</full_name>
        <docblock line="42">
          <description>Return the reward in JSON format.</description>
          <long-description></long-description>
          <tag line="42" name="return" description="reward in JSON format" type="\Model\the">
            <type by_reference="false">\Model\the</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Model" line="66" package="Default">
        <name>getBadges</name>
        <full_name>getBadges</full_name>
        <docblock line="61">
          <description>Return the badges of this rewards.</description>
          <long-description></long-description>
          <tag line="61" name="return" description="badges of this rewards" type="\Model\the">
            <type by_reference="false">\Model\the</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Model" line="76" package="Default">
        <name>getKoinCountNew</name>
        <full_name>getKoinCountNew</full_name>
        <docblock line="71">
          <description>Return the amount of koins of this reward.</description>
          <long-description></long-description>
          <tag line="71" name="return" description="the amount of koins of this reward" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Model" line="86" package="Default">
        <name>getKoinCountTotal</name>
        <full_name>getKoinCountTotal</full_name>
        <docblock line="81">
          <description>Return the amount total koins of the user after receiving this reward.</description>
          <long-description></long-description>
          <tag line="81" name="return" description="the total amount of koins of the user" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="php\OAuth\AbstractOAuthCallback.php" hash="558a685298a03c9ff5802eb34f83bc4d" package="Default">
    <docblock line="2">
      <description>kort - OAuth\AbstractOAuthCallback class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="true" namespace="OAuth" line="16" package="Default">
      <extends/>
      <name>AbstractOAuthCallback</name>
      <full_name>\OAuth\AbstractOAuthCallback</full_name>
      <docblock line="11">
        <description>The AbstractOAuthCallback class specifies common OAuth functionality.</description>
        <long-description>&lt;p&gt;It must be extended by each OAuth provider&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="true" static="false" visibility="public" namespace="OAuth" line="25" package="Default">
        <name>authenticate</name>
        <full_name>authenticate</full_name>
        <docblock line="18">
          <description>Authenticate against the OAuth provider.</description>
          <long-description></long-description>
          <tag line="18" name="param" description="The autentication code." type="mixed" variable="$code">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="18" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="OAuth" line="32" package="Default">
        <name>getRefreshToken</name>
        <full_name>getRefreshToken</full_name>
        <docblock line="27">
          <description>Returns the OAuth refresh token, which typically lives a long time.</description>
          <long-description></long-description>
          <tag line="27" name="return" description="The OAuth refresh token" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="OAuth" line="39" package="Default">
        <name>getAccessToken</name>
        <full_name>getAccessToken</full_name>
        <docblock line="34">
          <description>Returns the OAuth access token for this session.</description>
          <long-description></long-description>
          <tag line="34" name="return" description="The OAuth access token for this session" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="OAuth" line="46" package="Default">
        <name>getOAuthUser</name>
        <full_name>getOAuthUser</full_name>
        <docblock line="41">
          <description>Returns an array with user infos from the OAuth provier.</description>
          <long-description></long-description>
          <tag line="41" name="return" description="The OAuth user infos" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="OAuth" line="53" package="Default">
        <name>getOAuthUserId</name>
        <full_name>getOAuthUserId</full_name>
        <docblock line="48">
          <description>Returns an identifier for this OAuth user.</description>
          <long-description></long-description>
          <tag line="48" name="return" description="Identifier for this OAuth user" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="OAuth" line="60" package="Default">
        <name>getOAuthProvider</name>
        <full_name>getOAuthProvider</full_name>
        <docblock line="55">
          <description>The name of the OAuth provider.</description>
          <long-description></long-description>
          <tag line="55" name="return" description="Name of the OAuth provider" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OAuth" line="67" package="Default">
        <name>getUser</name>
        <full_name>getUser</full_name>
        <docblock line="62">
          <description>Returns an array with all currently known user details.</description>
          <long-description></long-description>
          <tag line="62" name="return" description="The current user array" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="OAuth" line="80" package="Default">
        <name>getApplicationUser</name>
        <full_name>getApplicationUser</full_name>
        <docblock line="75">
          <description>Returns the user info array from the application.</description>
          <long-description></long-description>
          <tag line="75" name="return" description="User info array from the application" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OAuth" line="93" package="Default">
        <name>saveApplicationUser</name>
        <full_name>saveApplicationUser</full_name>
        <docblock line="88">
          <description>Updates or insert an application user.</description>
          <long-description></long-description>
          <tag line="88" name="return" description="The updated/inserted user from the database" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="OAuth" line="113" package="Default">
        <name>insertApplicationUser</name>
        <full_name>insertApplicationUser</full_name>
        <docblock line="106">
          <description>Insert a user into the database.</description>
          <long-description></long-description>
          <tag line="106" name="param" description="Array of user infos from OAuth." type="array" variable="$user">
            <type by_reference="false">array</type>
          </tag>
          <tag line="106" name="return" description="The inserted user from the database" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="OAuth" line="132" package="Default">
        <name>updateApplicationUser</name>
        <full_name>updateApplicationUser</full_name>
        <docblock line="124">
          <description>Update a user from the database.</description>
          <long-description></long-description>
          <tag line="124" name="param" description="Array of user infos from the application." type="array" variable="$appUser">
            <type by_reference="false">array</type>
          </tag>
          <tag line="124" name="param" description="Array of user infos from OAuth." type="array" variable="$user">
            <type by_reference="false">array</type>
          </tag>
          <tag line="124" name="return" description="The updated user from the database" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="132">
          <name>$appUser</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="132">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OAuth" line="144" package="Default">
        <name>getApplicationUrl</name>
        <full_name>getApplicationUrl</full_name>
        <docblock line="139">
          <description>Returns the URL of the application.</description>
          <long-description></long-description>
          <tag line="139" name="return" description="The URL of the application" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="php\OAuth\GoogleOAuth.php" hash="54fb3ce17807fa599f4c8807678c2ed4" package="Default">
    <docblock line="2">
      <description>kort - OAuth\GoogleOAuth class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OAuth" line="10" package="Default">
      <extends>\OAuth\AbstractOAuthCallback</extends>
      <name>GoogleOAuth</name>
      <full_name>\OAuth\GoogleOAuth</full_name>
      <docblock line="7">
        <description>The GoogleOAuth class takes care about the login with Google.</description>
        <long-description></long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="17" namespace="OAuth" package="Default">
        <name>$client</name>
        <default></default>
        <docblock line="12">
          <description>The Google API Client.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="\OAuth\Google_Client">
            <type by_reference="false">\OAuth\Google_Client</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="OAuth" package="Default">
        <name>$oAuthService</name>
        <default></default>
        <docblock line="19">
          <description>The Google OAuth Service to receive user data.</description>
          <long-description></long-description>
          <tag line="19" name="var" description="" type="\OAuth\Google_Oauth2Service">
            <type by_reference="false">\OAuth\Google_Oauth2Service</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="OAuth" package="Default">
        <name>$user</name>
        <default>null</default>
        <docblock line="26">
          <description>The current user.</description>
          <long-description></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OAuth" line="36" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="33">
          <description>Creates a new instance of GoogleOAuth.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OAuth" line="49" package="Default">
        <name>authenticate</name>
        <full_name>authenticate</full_name>
        <docblock line="42">
          <description>Authenticate against the OAuth provider.</description>
          <long-description></long-description>
          <tag line="42" name="param" description="The autentication code from Google." type="string" variable="$code">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="OAuth" line="59" package="Default">
        <name>getAccessToken</name>
        <full_name>getAccessToken</full_name>
        <docblock line="54">
          <description>Returns the OAuth access token for this session.</description>
          <long-description></long-description>
          <tag line="54" name="return" description="The OAuth access token for this session" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OAuth" line="69" package="Default">
        <name>getRefreshToken</name>
        <full_name>getRefreshToken</full_name>
        <docblock line="64">
          <description>Returns the OAuth refresh token, which typically lives a long time.</description>
          <long-description></long-description>
          <tag line="64" name="return" description="The OAuth refresh token" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OAuth" line="83" package="Default">
        <name>getOAuthUser</name>
        <full_name>getOAuthUser</full_name>
        <docblock line="78">
          <description>Returns an array with user infos from the OAuth provier.</description>
          <long-description></long-description>
          <tag line="78" name="return" description="The current user array" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="OAuth" line="96" package="Default">
        <name>getOAuthUserId</name>
        <full_name>getOAuthUserId</full_name>
        <docblock line="91">
          <description>Returns an identifier for this OAuth user.</description>
          <long-description></long-description>
          <tag line="91" name="return" description="Identifier for this OAuth user" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OAuth" line="107" package="Default">
        <name>getOAuthProvider</name>
        <full_name>getOAuthProvider</full_name>
        <docblock line="102">
          <description>The name of the OAuth provider.</description>
          <long-description></long-description>
          <tag line="102" name="return" description="Name of the OAuth provider" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="php\OAuth\OsmOAuth.php" hash="7b986d8dda235414a879f8136a5daa83" package="Default">
    <docblock line="2">
      <description>kort - OAuth\OsmOAuth class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="OAuth" line="10" package="Default">
      <extends>\OAuth\AbstractOAuthCallback</extends>
      <name>OsmOAuth</name>
      <full_name>\OAuth\OsmOAuth</full_name>
      <docblock line="7">
        <description>The OsmOAuth class takes care about the login with OpenStreetMap.</description>
        <long-description></long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="17" namespace="OAuth" package="Default">
        <name>$user</name>
        <default>array()</default>
        <docblock line="12">
          <description>The current user.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="OAuth" package="Default">
        <name>$userUrl</name>
        <default>"http://api.openstreetmap.org/api/0.6/user/details"</default>
        <docblock line="19">
          <description>The url of the user webservice of OpenStreetMap.</description>
          <long-description></long-description>
          <tag line="19" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="OAuth" package="Default">
        <name>$serverUrl</name>
        <default>"http://www.openstreetmap.org"</default>
        <docblock line="26">
          <description>The server url of OpenStreetMap.</description>
          <long-description></long-description>
          <tag line="26" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="OAuth" package="Default">
        <name>$authorizeUrl</name>
        <default>"http://www.openstreetmap.org/oauth/authorize"</default>
        <docblock line="33">
          <description>The authorize url of OpenStreetMap.</description>
          <long-description></long-description>
          <tag line="33" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" namespace="OAuth" package="Default">
        <name>$accessTokenUrl</name>
        <default>"http://www.openstreetmap.org/oauth/access_token"</default>
        <docblock line="40">
          <description>The access token url of OpenStreetMap.</description>
          <long-description></long-description>
          <tag line="40" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" namespace="OAuth" package="Default">
        <name>$requestTokenUrl</name>
        <default>"http://www.openstreetmap.org/oauth/request_token"</default>
        <docblock line="47">
          <description>The request token url of OpenStreetMap.</description>
          <long-description></long-description>
          <tag line="47" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="59" namespace="OAuth" package="Default">
        <name>$key</name>
        <default></default>
        <docblock line="54">
          <description>The consumer key.</description>
          <long-description></long-description>
          <tag line="54" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="66" namespace="OAuth" package="Default">
        <name>$secret</name>
        <default></default>
        <docblock line="61">
          <description>The consumer secret.</description>
          <long-description></long-description>
          <tag line="61" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="73" namespace="OAuth" package="Default">
        <name>$oauthToken</name>
        <default></default>
        <docblock line="68">
          <description>The received OAuthToken.</description>
          <long-description></long-description>
          <tag line="68" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OAuth" line="82" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="75">
          <description>Creates a new instance of OsmOAuth.</description>
          <long-description></long-description>
          <tag line="75" name="param" description="The consumer key." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="75" name="param" description="The consumer secret." type="string" variable="$secret">
            <type by_reference="false">string</type>
          </tag>
          <tag line="75" name="param" description="Determines wheter this call is made from a unit test or not." type="boolean" variable="$unitTest">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="82">
          <name>$secret</name>
          <default></default>
          <type/>
        </argument>
        <argument line="82">
          <name>$unitTest</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="OAuth" line="96" package="Default">
        <name>getOAuthOptions</name>
        <full_name>getOAuthOptions</full_name>
        <docblock line="91">
          <description>Returns an array of options for OAuth.</description>
          <long-description></long-description>
          <tag line="91" name="return" description="Options for OAuth" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OAuth" line="116" package="Default">
        <name>authenticate</name>
        <full_name>authenticate</full_name>
        <docblock line="109">
          <description>Authenticate against the OAuth provider.</description>
          <long-description></long-description>
          <tag line="109" name="param" description="The autentication code from Google." type="string" variable="$oauthToken">
            <type by_reference="false">string</type>
          </tag>
          <tag line="109" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$oauthToken</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="OAuth" line="133" package="Default">
        <name>getAccessToken</name>
        <full_name>getAccessToken</full_name>
        <docblock line="128">
          <description>Returns the OAuth access token for this session.</description>
          <long-description></long-description>
          <tag line="128" name="return" description="The OAuth access token for this session" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OAuth" line="143" package="Default">
        <name>getRefreshToken</name>
        <full_name>getRefreshToken</full_name>
        <docblock line="138">
          <description>Returns the OAuth refresh token, which typically lives a long time.</description>
          <long-description></long-description>
          <tag line="138" name="return" description="The OAuth refresh token" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OAuth" line="155" package="Default">
        <name>getOAuthUser</name>
        <full_name>getOAuthUser</full_name>
        <docblock line="150">
          <description>Returns an array with user infos from the OAuth provier.</description>
          <long-description></long-description>
          <tag line="150" name="return" description="The current user array" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="OAuth" line="176" package="Default">
        <name>getOAuthUserId</name>
        <full_name>getOAuthUserId</full_name>
        <docblock line="171">
          <description>Returns an identifier for this OAuth user.</description>
          <long-description></long-description>
          <tag line="171" name="return" description="Identifier for this OAuth user" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OAuth" line="187" package="Default">
        <name>getOAuthProvider</name>
        <full_name>getOAuthProvider</full_name>
        <docblock line="182">
          <description>The name of the OAuth provider.</description>
          <long-description></long-description>
          <tag line="182" name="return" description="Name of the OAuth provider" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OAuth" line="197" package="Default">
        <name>getAuthorizeUrl</name>
        <full_name>getAuthorizeUrl</full_name>
        <docblock line="192">
          <description>Returns the URL where a user must authorize.</description>
          <long-description></long-description>
          <tag line="192" name="return" description="URL to authorize the user" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="OAuth" line="208" package="Default">
        <name>getRequestToken</name>
        <full_name>getRequestToken</full_name>
        <docblock line="203">
          <description>Returns the request token.</description>
          <long-description></long-description>
          <tag line="203" name="return" description="The request token." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="OAuth" line="221" package="Default">
        <name>getSecretFile</name>
        <full_name>getSecretFile</full_name>
        <docblock line="214">
          <description>Returns the file name of the correct secret file based on the environment.</description>
          <long-description></long-description>
          <tag line="214" name="param" description="The current host (only used in unit testing)." type="string" variable="$host">
            <type by_reference="false">string</type>
          </tag>
          <tag line="214" name="return" description="the file name of the correct secret file." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="221">
          <name>$host</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\TestHelper\AbstractKortUnitTestCase.php" hash="02669ab3c4fa6cdce2f09daa164b6053" package="Default">
    <docblock line="2">
      <description>kort - TestHelper\AbstractKortUnitTestCase class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="true" namespace="TestHelper" line="17" package="Default">
      <extends>\UnitTestCase</extends>
      <name>AbstractKortUnitTestCase</name>
      <full_name>\TestHelper\AbstractKortUnitTestCase</full_name>
      <docblock line="9">
        <description>The AbstractKortUnitTestCase class is the kort-specific sub-class of UnitTestCase.</description>
        <long-description>&lt;p&gt;It takes care of the correct labeling and the test output.&lt;/p&gt;

&lt;p&gt;It is recommended that all test classes in this project are subclasses of this
class. This ensures that they can be run together easily.&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="24" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="19">
          <description>Create a new UnitTestCase with a label.</description>
          <long-description></long-description>
          <tag line="19" name="param" description="Label for the test case." type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="24">
          <name>$label</name>
          <default>"Kort - Test Case"</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="40" package="Default">
        <name>report</name>
        <full_name>report</full_name>
        <docblock line="29">
          <description>Genereates a nice report of the test.</description>
          <long-description>&lt;p&gt;It instantiate a SimpleTest TestSuite and launches a Reporter.
This method is typically called by a TestRunner.&lt;/p&gt;</long-description>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="29" name="see" description="\TestHelper\KortTestRunner" refers="\TestHelper\KortTestRunner"/>
          <tag line="29" name="see" description="\TestHelper\KortCliReporter" refers="\TestHelper\KortCliReporter"/>
          <tag line="29" name="see" description="\TestHelper\KortHTMLReporter" refers="\TestHelper\KortHTMLReporter"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="58" package="Default">
        <name>assertEmpty</name>
        <full_name>assertEmpty</full_name>
        <docblock line="50">
          <description>Passes if the given $value is empty.</description>
          <long-description></long-description>
          <tag line="50" name="param" description="Value to check for it's emptiness." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="50" name="param" description="Message to display describing the test state." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="return" description="True on pass" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="58">
          <name>$message</name>
          <default>""</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="71" package="Default">
        <name>assertNotEmpty</name>
        <full_name>assertNotEmpty</full_name>
        <docblock line="63">
          <description>Passes if the given $value is not empty.</description>
          <long-description></long-description>
          <tag line="63" name="param" description="Value to check for it's emptiness." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="63" name="param" description="Message to display describing the test state." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="return" description="True on pass" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="71">
          <name>$message</name>
          <default>""</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\TestHelper\DirectoryTraverser.php" hash="1933894d6db3827e5289d5be8d9e75c1" package="Default">
    <docblock line="2">
      <description>kort - TestHelper\DirectoryTraverser class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="TestHelper" line="10" package="Default">
      <extends/>
      <name>DirectoryTraverser</name>
      <full_name>\TestHelper\DirectoryTraverser</full_name>
      <docblock line="7">
        <description>The DirectoryTraverser class provides functionality apply a function to each file in a directory.</description>
        <long-description></long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="17" namespace="TestHelper" package="Default">
        <name>$block</name>
        <default></default>
        <docblock line="12">
          <description>Function object to be applied to a directory structure.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="26" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="19">
          <description>Create a new DirectoryTraverser object.</description>
          <long-description></long-description>
          <tag line="19" name="param" description="Function to be applied to a directory structure." type="callback|\TestHelper\Closure" variable="$block">
            <type by_reference="false">callback</type>
            <type by_reference="false">\TestHelper\Closure</type>
          </tag>
          <tag line="19" name="throws" description="If $block is not a callable object." type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$block</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="41" package="Default">
        <name>traverse</name>
        <full_name>traverse</full_name>
        <docblock line="34">
          <description>Traverse over directory $dir and apply $block to each found file.</description>
          <long-description></long-description>
          <tag line="34" name="param" description="The directory to traverse over." type="string" variable="$dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$dir</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\TestHelper\KortAllTests.php" hash="dfeebc5b3a252c399fc59e287ee18faf" package="Default">
    <docblock line="2">
      <description>kort - TestHelper\KortAllTests class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="TestHelper" line="10" package="Default">
      <extends>\TestSuite</extends>
      <name>KortAllTests</name>
      <full_name>\TestHelper\KortAllTests</full_name>
      <docblock line="7">
        <description>The KortAllTests is a TestSuite that contains all tests of the project.</description>
        <long-description></long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="17" namespace="TestHelper" package="Default">
        <name>$reporter</name>
        <default></default>
        <docblock line="12">
          <description>The reporter instance to use for displaying the tests.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="\TestHelper\SimpleReporter">
            <type by_reference="false">\TestHelper\SimpleReporter</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="22" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="19">
          <description>Create a new KortAllTest test suite.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="35" package="Default">
        <name>run</name>
        <full_name>run</full_name>
        <docblock line="28">
          <description>Runs all tests that have previouly been added to the suite.</description>
          <long-description></long-description>
          <tag line="28" name="param" description="Reporter instance to use to display the test results." type="mixed" variable="$reporter">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="28" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$reporter</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\TestHelper\KortCliReporter.php" hash="a3761bdca9dc3d14a74f444f509c6dad" package="Default">
    <docblock line="2">
      <description>kort - TestHelper\KortCliReporter class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="TestHelper" line="10" package="Default">
      <extends>\SimpleReporter</extends>
      <name>KortCliReporter</name>
      <full_name>\TestHelper\KortCliReporter</full_name>
      <docblock line="7">
        <description>The KortCliReporter is a kort-specifc TestReporter for the command line (CLI).</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="15" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="12">
          <description>Creates a new KortCliReporter instance.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="28" package="Default">
        <name>paintHeader</name>
        <full_name>paintHeader</full_name>
        <docblock line="21">
          <description>Paints the header of the test.</description>
          <long-description></long-description>
          <tag line="21" name="param" description="The name of the test." type="string" variable="$test_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="21" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$test_name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="41" package="Default">
        <name>paintFooter</name>
        <full_name>paintFooter</full_name>
        <docblock line="34">
          <description>Paints the footer of the test.</description>
          <long-description></long-description>
          <tag line="34" name="param" description="The name of the test." type="string" variable="$test_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$test_name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="65" package="Default">
        <name>paintCaseStart</name>
        <full_name>paintCaseStart</full_name>
        <docblock line="58">
          <description>Paints the header of the test case.</description>
          <long-description></long-description>
          <tag line="58" name="param" description="The name of the test case." type="string" variable="$case">
            <type by_reference="false">string</type>
          </tag>
          <tag line="58" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$case</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="78" package="Default">
        <name>paintCaseEnd</name>
        <full_name>paintCaseEnd</full_name>
        <docblock line="71">
          <description>Paints the footer of the test case.</description>
          <long-description></long-description>
          <tag line="71" name="param" description="The name of the test case." type="string" variable="$case">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$case</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="90" package="Default">
        <name>paintMethodStart</name>
        <full_name>paintMethodStart</full_name>
        <docblock line="83">
          <description>Paints the header of the test method.</description>
          <long-description></long-description>
          <tag line="83" name="param" description="The name of the test method." type="string" variable="$test">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$test</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="103" package="Default">
        <name>paintMethodEnd</name>
        <full_name>paintMethodEnd</full_name>
        <docblock line="96">
          <description>Paints the footer of the test method.</description>
          <long-description></long-description>
          <tag line="96" name="param" description="The name of the test method." type="string" variable="$test">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$test</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="116" package="Default">
        <name>paintFail</name>
        <full_name>paintFail</full_name>
        <docblock line="109">
          <description>Paints a failing test.</description>
          <long-description></long-description>
          <tag line="109" name="param" description="The message of the failing test." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="109" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="129" package="Default">
        <name>paintException</name>
        <full_name>paintException</full_name>
        <docblock line="122">
          <description>Paints a test exception.</description>
          <long-description></long-description>
          <tag line="122" name="param" description="The message of the test exception." type="string" variable="$exception">
            <type by_reference="false">string</type>
          </tag>
          <tag line="122" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="129">
          <name>$exception</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="142" package="Default">
        <name>paintError</name>
        <full_name>paintError</full_name>
        <docblock line="135">
          <description>Paints a test error.</description>
          <long-description></long-description>
          <tag line="135" name="param" description="The message of the test error." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="135" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\TestHelper\KortHTMLReporter.php" hash="b9da34666d132068c9c6659ec1e439a2" package="Default">
    <docblock line="2">
      <description>kort - TestHelper\KortHTMLReporter class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="TestHelper" line="10" package="Default">
      <extends>\HtmlReporter</extends>
      <name>KortHTMLReporter</name>
      <full_name>\TestHelper\KortHTMLReporter</full_name>
      <docblock line="7">
        <description>The KortHTMLReporter class is a kort-specific implementation of a HTML reporter.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="19" package="Default">
        <name>paintPass</name>
        <full_name>paintPass</full_name>
        <docblock line="12">
          <description>Paints a passing test.</description>
          <long-description></long-description>
          <tag line="12" name="param" description="The message of the passed test." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="12" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="19">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="TestHelper" line="36" package="Default">
        <name>paintHeader</name>
        <full_name>paintHeader</full_name>
        <docblock line="29">
          <description>Paints a header for the test case.</description>
          <long-description></long-description>
          <tag line="29" name="param" description="The name of the test." type="string" variable="$test_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$test_name</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\TestHelper\KortTestRunner.php" hash="8f9b9bc322f95dd0bc626b28ebaa9372" package="Default">
    <docblock line="2">
      <description>kort - TestHelper\KortTestRunner class</description>
      <long-description></long-description>
    </docblock>
    <include line="24" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="TestHelper" line="12" package="Default">
      <extends/>
      <name>KortTestRunner</name>
      <full_name>\TestHelper\KortTestRunner</full_name>
      <docblock line="9">
        <description>The KortTestRunner class is a helper class to run all tests of the project.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="TestHelper" line="22" package="Default">
        <name>runTestFile</name>
        <full_name>runTestFile</full_name>
        <docblock line="14">
          <description>Runs the tests of an AbstractKortUnitTestCase.</description>
          <long-description></long-description>
          <tag line="14" name="param" description="The path to a file which contains a sub-class of AbstractKortUnitTestCase." type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="14" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="14" name="see" description="\TestHelper\AbstractKortUnitTestCase" refers="\TestHelper\AbstractKortUnitTestCase"/>
        </docblock>
        <argument line="22">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="TestHelper" line="39" package="Default">
        <name>findClass</name>
        <full_name>findClass</full_name>
        <docblock line="31">
          <description>Finds the class name of a file.</description>
          <long-description></long-description>
          <tag line="31" name="param" description="The filename of PHP file." type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="return" description="the class name" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="throws" description="If the class could not be found." type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$filename</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="TestHelper" line="59" package="Default">
        <name>runTestDirectory</name>
        <full_name>runTestDirectory</full_name>
        <docblock line="50">
          <description>Finds all Test* files in $dir and runs them.</description>
          <long-description></long-description>
          <tag line="50" name="param" description="The directory to look into for all tests." type="string" variable="$dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="param" description="The TestSuite to add all found test files." type="mixed" variable="$suite">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="50" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="50" name="see" description="\TestHelper\KortAllTests" refers="\TestHelper\KortAllTests"/>
        </docblock>
        <argument line="59">
          <name>$dir</name>
          <default></default>
          <type/>
        </argument>
        <argument line="59">
          <name>$suite</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Webservice\Answer\AnswerHandler.php" hash="aa49a16a88c24f7bfe13fc8b6f0b670f" package="Default">
    <docblock line="2">
      <description>kort - Webservice\Answer\AnswerHandler class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Webservice\Answer" line="12" package="Default">
      <extends>\Webservice\DbProxyHandler</extends>
      <name>AnswerHandler</name>
      <full_name>\Webservice\Answer\AnswerHandler</full_name>
      <docblock line="9">
        <description>The AnswerHandler class is used to handle requests to the answer webservices.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Answer" line="19" package="Default">
        <name>getTable</name>
        <full_name>getTable</full_name>
        <docblock line="14">
          <description>Returns the table used by this handler.</description>
          <long-description></long-description>
          <tag line="14" name="return" description="the table name used by this handler." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Answer" line="29" package="Default">
        <name>getFields</name>
        <full_name>getFields</full_name>
        <docblock line="24">
          <description>Returns the table fields used by this handler.</description>
          <long-description></long-description>
          <tag line="24" name="return" description="the table fields used by this handler." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Answer" line="39" package="Default">
        <name>getAllAnswers</name>
        <full_name>getAllAnswers</full_name>
        <docblock line="34">
          <description>Returns all answers of all types.</description>
          <long-description></long-description>
          <tag line="34" name="return" description="all answers of all types" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Answer" line="52" package="Default">
        <name>getSpecificAnswers</name>
        <full_name>getSpecificAnswers</full_name>
        <docblock line="45">
          <description>Returns all answers of a specific type.</description>
          <long-description></long-description>
          <tag line="45" name="param" description="The type of answer." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="return" description="ll answers of the specific type" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Webservice\Bug\BugHandler.php" hash="c7313ad905ff8d5a0ebe1ae7eacc042e" package="Default">
    <docblock line="2">
      <description>kort - Webservice\Bug\BugHandler class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Webservice\Bug" line="13" package="Default">
      <extends>\Webservice\DbProxyHandler</extends>
      <name>BugHandler</name>
      <full_name>\Webservice\Bug\BugHandler</full_name>
      <docblock line="10">
        <description>The BugHandler class is used to handle request to the bug webservices.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Bug" line="20" package="Default">
        <name>getTable</name>
        <full_name>getTable</full_name>
        <docblock line="15">
          <description>Returns the table used by this handler.</description>
          <long-description></long-description>
          <tag line="15" name="return" description="the table name used by this handler." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Bug" line="30" package="Default">
        <name>getFields</name>
        <full_name>getFields</full_name>
        <docblock line="25">
          <description>Returns the table fields used by this handler.</description>
          <long-description></long-description>
          <tag line="25" name="return" description="the table fields used by this handler." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Bug" line="63" package="Default">
        <name>getBugsByOwnPosition</name>
        <full_name>getBugsByOwnPosition</full_name>
        <docblock line="53">
          <description>Returns bugs around the users position.</description>
          <long-description></long-description>
          <tag line="53" name="param" description="Latitide of the user position." type="float" variable="$lat">
            <type by_reference="false">float</type>
          </tag>
          <tag line="53" name="param" description="Longitude of the user position." type="float" variable="$lng">
            <type by_reference="false">float</type>
          </tag>
          <tag line="53" name="param" description="Amount of bugs to return." type="integer" variable="$limit">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="53" name="param" description="Radius around the users psotion to look for." type="integer" variable="$radius">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="53" name="return" description="JSON-formatted bugs" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$lat</name>
          <default></default>
          <type/>
        </argument>
        <argument line="63">
          <name>$lng</name>
          <default></default>
          <type/>
        </argument>
        <argument line="63">
          <name>$limit</name>
          <default></default>
          <type/>
        </argument>
        <argument line="63">
          <name>$radius</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Bug" line="81" package="Default">
        <name>select</name>
        <full_name>select</full_name>
        <docblock line="76">
          <description>Returns the selected bugs.</description>
          <long-description></long-description>
          <tag line="76" name="return" description="JSON-encoded bugs" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Bug" line="95" package="Default">
        <name>getById</name>
        <full_name>getById</full_name>
        <docblock line="88">
          <description>Return a bug with a specific id.</description>
          <long-description></long-description>
          <tag line="88" name="param" description="The id of the bug." type="integer" variable="$id">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="88" name="return" description="JSON-encoded bug" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Bug" line="108" package="Default">
        <name>translateBug</name>
        <full_name>translateBug</full_name>
        <docblock line="101">
          <description>Translate all texts of a bug.</description>
          <long-description></long-description>
          <tag line="101" name="param" description="The bug to translate." type="array" variable="$bug">
            <type by_reference="false">array</type>
          </tag>
          <tag line="101" name="return" description="the translated bug" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$bug</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="67">Use the radius and get a fast result</todo>
    </markers>
  </file>
  <file path="php\Webservice\Database\DbConfig.example.php" hash="a3ad39a5eb616d56a79b209ac541d989" package="Default">
    <docblock line="2">
      <description>kort - Webservice\Database\DbConfig class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Webservice\Database" line="12" package="Default">
      <extends/>
      <name>DbConfig</name>
      <full_name>\Webservice\Database\DbConfig</full_name>
      <docblock line="7">
        <description>This is an example for the DbConfig class.</description>
        <long-description>&lt;p&gt;Setup these values and rename file to DbConfig.php&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="19" namespace="Webservice\Database" package="Default">
        <name>$host</name>
        <default>"localhost"</default>
        <docblock line="14">
          <description>The host name of the db server.</description>
          <long-description></long-description>
          <tag line="14" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="26" namespace="Webservice\Database" package="Default">
        <name>$port</name>
        <default>5432</default>
        <docblock line="21">
          <description>The port on which the db runs.</description>
          <long-description></long-description>
          <tag line="21" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="Webservice\Database" package="Default">
        <name>$dbname</name>
        <default>"osm_bugs"</default>
        <docblock line="28">
          <description>The name of the database.</description>
          <long-description></long-description>
          <tag line="28" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="Webservice\Database" package="Default">
        <name>$user</name>
        <default>"osm"</default>
        <docblock line="35">
          <description>The database user.</description>
          <long-description></long-description>
          <tag line="35" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="47" namespace="Webservice\Database" package="Default">
        <name>$password</name>
        <default>"mysecretpassword"</default>
        <docblock line="42">
          <description>The password of the database user.</description>
          <long-description></long-description>
          <tag line="42" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
    </class>
  </file>
  <file path="php\Webservice\Database\DbConfig.php" hash="d343a37c3938ba28844e91343774c760" package="Default">
    <docblock line="2">
      <description>kort - Webservice\Database\DbConfig class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Webservice\Database" line="12" package="Default">
      <extends/>
      <name>DbConfig</name>
      <full_name>\Webservice\Database\DbConfig</full_name>
      <docblock line="7">
        <description>This is an example for the DbConfig class.</description>
        <long-description>&lt;p&gt;Setup these values and rename file to DbConfig.php&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="19" namespace="Webservice\Database" package="Default">
        <name>$host</name>
        <default>"localhost"</default>
        <docblock line="14">
          <description>The host name of the db server.</description>
          <long-description></long-description>
          <tag line="14" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="26" namespace="Webservice\Database" package="Default">
        <name>$port</name>
        <default>5432</default>
        <docblock line="21">
          <description>The port on which the db runs.</description>
          <long-description></long-description>
          <tag line="21" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="Webservice\Database" package="Default">
        <name>$dbname</name>
        <default>"osm_bugs"</default>
        <docblock line="28">
          <description>The name of the database.</description>
          <long-description></long-description>
          <tag line="28" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="Webservice\Database" package="Default">
        <name>$user</name>
        <default>"osm"</default>
        <docblock line="35">
          <description>The database user.</description>
          <long-description></long-description>
          <tag line="35" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="47" namespace="Webservice\Database" package="Default">
        <name>$password</name>
        <default>"osm2012"</default>
        <docblock line="42">
          <description>The password of the database user.</description>
          <long-description></long-description>
          <tag line="42" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
    </class>
  </file>
  <file path="php\Webservice\Database\DbHandler.php" hash="a50dd65a7208fd89fc64caed6209d960" package="Default">
    <docblock line="2">
      <description>kort - Webservice\Database\DbHandler class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Webservice\Database" line="12" package="Default">
      <extends/>
      <name>DbHandler</name>
      <full_name>\Webservice\Database\DbHandler</full_name>
      <docblock line="9">
        <description>The DbHandler class takes care of all requests to the db webservice.</description>
        <long-description></long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="19" namespace="Webservice\Database" package="Default">
        <name>$db</name>
        <default></default>
        <docblock line="14">
          <description>The database connection.</description>
          <long-description></long-description>
          <tag line="14" name="var" description="" type="\Webservice\Database\PsqlConnection">
            <type by_reference="false">\Webservice\Database\PsqlConnection</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Database" line="29" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="21">
          <description>Create a new DbHandler.</description>
          <long-description>&lt;p&gt;The parameter is only used for unit testing.
Normally the database gets initialized by a DbConfig object.&lt;/p&gt;</long-description>
          <tag line="21" name="param" description="Database connection object." type="\Webservice\Database\PsqlConnection" variable="$db">
            <type by_reference="false">\Webservice\Database\PsqlConnection</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$db</name>
          <default>null</default>
          <type>\Webservice\Database\PsqlConnection</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Database" line="46" package="Default">
        <name>doSql</name>
        <full_name>doSql</full_name>
        <docblock line="38">
          <description>Run SQL statement on the database.</description>
          <long-description></long-description>
          <tag line="38" name="param" description="Arbitrary sql statement." type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="return" description="if the sql statements succeeds,&#13;&#10;this method return the results as JSON-encoded string, false otherwise" type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Database" line="68" package="Default">
        <name>doSelect</name>
        <full_name>doSelect</full_name>
        <docblock line="56">
          <description>Run a select query on the database.</description>
          <long-description></long-description>
          <tag line="56" name="param" description="Fields of the table." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="56" name="param" description="Table name." type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="param" description="Where clause (condition)." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="param" description="Order by clause (sorting)." type="string" variable="$orderBy">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="param" description="Amount of records to return." type="integer" variable="$limit">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="56" name="return" description="if the sql statements succeeds,&#13;&#10;this method return the results as JSON-encoded string, false otherwise" type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$fields</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="68">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$orderBy</name>
          <default></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$limit</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Database" line="85" package="Default">
        <name>doSelectWithParams</name>
        <full_name>doSelectWithParams</full_name>
        <docblock line="77">
          <description>The same as doSelect, but the parameter is an array.</description>
          <long-description></long-description>
          <tag line="77" name="param" description="Array with parameters." type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="77" name="return" description="JSON-encoded string if successful, false otherwise" type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
          <tag line="77" name="see" description="\Webservice\Database\doSelect" refers="\Webservice\Database\doSelect"/>
        </docblock>
        <argument line="85">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Database" line="106" package="Default">
        <name>doInsert</name>
        <full_name>doInsert</full_name>
        <docblock line="95">
          <description>Run a insert query on the database.</description>
          <long-description></long-description>
          <tag line="95" name="param" description="Fields of the table." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="95" name="param" description="Table name." type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="param" description="Key/value (field/data) pairs for all fields." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="95" name="param" description="Fields to return from this query." type="array" variable="$returnFields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="95" name="return" description="if the sql statements succeeds,&#13;&#10;this method returns the results as JSON-encoded string, false otherwise" type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$fields</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="106">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="106">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="106">
          <name>$returnFields</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Database" line="125" package="Default">
        <name>doInsertWithParams</name>
        <full_name>doInsertWithParams</full_name>
        <docblock line="117">
          <description>The same as doInsert, but the parameter is an array.</description>
          <long-description></long-description>
          <tag line="117" name="param" description="Array with parameters." type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="117" name="return" description="JSON-encoded string if successful, false otherwise" type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
          <tag line="117" name="see" description="\Webservice\Database\doInsert" refers="\Webservice\Database\doInsert"/>
        </docblock>
        <argument line="125">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Database" line="145" package="Default">
        <name>doUpdate</name>
        <full_name>doUpdate</full_name>
        <docblock line="134">
          <description>Run a update query on the database.</description>
          <long-description></long-description>
          <tag line="134" name="param" description="Fields of the table." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="134" name="param" description="Table name." type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="134" name="param" description="Key/value (field/data) pairs for all fields." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="134" name="param" description="Where clause (condition)." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="134" name="param" description="Fields to return from this query." type="array" variable="$returnFields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="134" name="return" description="JSON-encoded string if successful, false otherwise" type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$fields</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="145">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="145">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="145">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
        <argument line="145">
          <name>$returnFields</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Database" line="164" package="Default">
        <name>doUpdateWithParams</name>
        <full_name>doUpdateWithParams</full_name>
        <docblock line="156">
          <description>The same as doUpdate, but the parameter is an array.</description>
          <long-description></long-description>
          <tag line="156" name="param" description="Array with parameters." type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="156" name="return" description="JSON-encoded string if successful, false otherwise" type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
          <tag line="156" name="see" description="\Webservice\Database\doUpdate" refers="\Webservice\Database\doUpdate"/>
        </docblock>
        <argument line="164">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Database" line="183" package="Default">
        <name>doTransaction</name>
        <full_name>doTransaction</full_name>
        <docblock line="174">
          <description>Run multiple sql statements in a transaction.</description>
          <long-description></long-description>
          <tag line="174" name="param" description="Multiple statements, each entry containing a param array." type="array" variable="$statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="174" name="return" description="an array where each entry is the result of the corresponding&#13;&#10;sql statement. If one query fails, the transaction is rollbacked and an error&#13;&#10;message is returned." type="array|string">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="183">
          <name>$statements</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Database" line="228" package="Default">
        <name>reduceData</name>
        <full_name>reduceData</full_name>
        <docblock line="219">
          <description>Helper method to remove entries from $data that are not included in $fields.</description>
          <long-description></long-description>
          <tag line="219" name="param" description="The requested fields." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="219" name="param" description="The data to reduce." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="219" name="return" description="the $data array filter by the requested fields" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="219" name="see" description="\Webservice\Database\doInsert" refers="\Webservice\Database\doInsert"/>
        </docblock>
        <argument line="228">
          <name>$fields</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="228">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Database" line="246" package="Default">
        <name>checkAuth</name>
        <full_name>checkAuth</full_name>
        <docblock line="239">
          <description>Checks if the call to the webservice is made with a valid API key.</description>
          <long-description></long-description>
          <tag line="239" name="param" description="The API key sent by the client." type="string" variable="$apiKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="239" name="return" description="true if the key is correct, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="246">
          <name>$apiKey</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Webservice\Database\PsqlConnection.php" hash="5d350901ab2b80db6e8e08c0bf3b30ad" package="Default">
    <docblock line="2">
      <description>kort - Webservice\Database\PsqlConnection class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Webservice\Database" line="12" package="Default">
      <extends/>
      <name>PsqlConnection</name>
      <full_name>\Webservice\Database\PsqlConnection</full_name>
      <docblock line="9">
        <description>The PsqlConnection class is an abstraction of a PostgreSQL database connection.</description>
        <long-description></long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="19" namespace="Webservice\Database" package="Default">
        <name>$db</name>
        <default>null</default>
        <docblock line="14">
          <description>A PostgreSQL-specific helper object to run queries on the database.</description>
          <long-description></long-description>
          <tag line="14" name="var" description="" type="\Helper\PgHelper">
            <type by_reference="false">\Helper\PgHelper</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Database" line="27" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="21">
          <description>Create a new database connection wrapped in a PsqlConnection object.</description>
          <long-description></long-description>
          <tag line="21" name="param" description="The configuration for the connection." type="\Webservice\Database\DbConfig" variable="$dbConfig">
            <type by_reference="false">\Webservice\Database\DbConfig</type>
          </tag>
          <tag line="21" name="param" description="Parameter to inject a different PgHelper (used for unit testing only)." type="\Helper\PgHelper" variable="$db">
            <type by_reference="false">\Helper\PgHelper</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$dbConfig</name>
          <default></default>
          <type>\Webservice\Database\DbConfig</type>
        </argument>
        <argument line="27">
          <name>$db</name>
          <default>null</default>
          <type>\Helper\PgHelper</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Database" line="40" package="Default">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
        <docblock line="37">
          <description>Closes the db connection when the object is destroyed.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Database" line="54" package="Default">
        <name>doQuery</name>
        <full_name>doQuery</full_name>
        <docblock line="47">
          <description>Run any kind of query (passthrough) on the database.</description>
          <long-description></long-description>
          <tag line="47" name="param" description="Arbitrary sql statement." type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="47" name="return" description="the result of the query from the database" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Database" line="70" package="Default">
        <name>doSelectQuery</name>
        <full_name>doSelectQuery</full_name>
        <docblock line="59">
          <description>Run a select query.</description>
          <long-description></long-description>
          <tag line="59" name="param" description="Fields of the table." type="array" variable="$fieldsArr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="59" name="param" description="Table name." type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="param" description="Where clause (condition)." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="param" description="Order by clause (sorting)." type="string" variable="$orderBy">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="param" description="Amount of records to return." type="integer" variable="$limit">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="59" name="return" description="result of the query from the database" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$fieldsArr</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="70">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$orderBy</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="70">
          <name>$limit</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Database" line="85" package="Default">
        <name>doInsertQuery</name>
        <full_name>doInsertQuery</full_name>
        <docblock line="76">
          <description>Run a insert query on the database.</description>
          <long-description></long-description>
          <tag line="76" name="param" description="Key/value (field/data) pairs for all fields." type="array" variable="$dataArr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="76" name="param" description="Table name." type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="param" description="Fields to return from this query." type="array" variable="$returnFields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="76" name="return" description="result of the query from the database" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$dataArr</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="85">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="85">
          <name>$returnFields</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Database" line="104" package="Default">
        <name>doUpdateQuery</name>
        <full_name>doUpdateQuery</full_name>
        <docblock line="94">
          <description>Run a update query on the database.</description>
          <long-description></long-description>
          <tag line="94" name="param" description="Key/value (field/data) pairs for all fields." type="array" variable="$dataArr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="94" name="param" description="Table name." type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="94" name="param" description="Where clause (condition)." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="94" name="param" description="Fields to return from this query." type="array" variable="$returnFields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="94" name="return" description="result of the query from the database" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$dataArr</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="104">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="104">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
        <argument line="104">
          <name>$returnFields</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Database" line="117" package="Default">
        <name>beginTransaction</name>
        <full_name>beginTransaction</full_name>
        <docblock line="112">
          <description>Indicate the begin of a transaction.</description>
          <long-description></long-description>
          <tag line="112" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Database" line="127" package="Default">
        <name>commitTransaction</name>
        <full_name>commitTransaction</full_name>
        <docblock line="122">
          <description>Indicate the end of a transaction.</description>
          <long-description></long-description>
          <tag line="122" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Database" line="137" package="Default">
        <name>rollbackTransaction</name>
        <full_name>rollbackTransaction</full_name>
        <docblock line="132">
          <description>Rollback the transaction.</description>
          <long-description></long-description>
          <tag line="132" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Database" line="149" package="Default">
        <name>createConnectionString</name>
        <full_name>createConnectionString</full_name>
        <docblock line="142">
          <description>Creates a database connection string based on the given configuration.</description>
          <long-description></long-description>
          <tag line="142" name="param" description="The configuration of the database connection." type="\Webservice\Database\DbConfig" variable="$dbConfig">
            <type by_reference="false">\Webservice\Database\DbConfig</type>
          </tag>
          <tag line="142" name="return" description="the connection string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$dbConfig</name>
          <default></default>
          <type>\Webservice\Database\DbConfig</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Database" line="168" package="Default">
        <name>generateInsertSql</name>
        <full_name>generateInsertSql</full_name>
        <docblock line="159">
          <description>Generates a insert statement using placeholders.</description>
          <long-description></long-description>
          <tag line="159" name="param" description="Fields of the table." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="159" name="param" description="Table name." type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="159" name="param" description="Fields to return from this query." type="array" variable="$returnFields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="159" name="return" description="the generated sql statement" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="168">
          <name>$fields</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="168">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="168">
          <name>$returnFields</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Database" line="203" package="Default">
        <name>generateUpdateSql</name>
        <full_name>generateUpdateSql</full_name>
        <docblock line="193">
          <description>Generates a update statement using placeholders.</description>
          <long-description></long-description>
          <tag line="193" name="param" description="Fields of the table." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="193" name="param" description="Table name." type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="193" name="param" description="Where clause (condition)." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="193" name="param" description="Fields to return from this query." type="array" variable="$returnFields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="193" name="return" description="the generated sql statement" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="203">
          <name>$fields</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="203">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="203">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
        <argument line="203">
          <name>$returnFields</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Database" line="242" package="Default">
        <name>generateSelectSql</name>
        <full_name>generateSelectSql</full_name>
        <docblock line="231">
          <description>Generate a select statement.</description>
          <long-description></long-description>
          <tag line="231" name="param" description="Fields of the table." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="231" name="param" description="Table name." type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="231" name="param" description="Where clause (condition)." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="231" name="param" description="Order by clause (sorting)." type="string" variable="$orderBy">
            <type by_reference="false">string</type>
          </tag>
          <tag line="231" name="param" description="Amount of records to return." type="integer" variable="$limit">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="231" name="return" description="the generated sql statement" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="242">
          <name>$fields</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="242">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="242">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
        <argument line="242">
          <name>$orderBy</name>
          <default></default>
          <type/>
        </argument>
        <argument line="242">
          <name>$limit</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Webservice\DbProxy.php" hash="e0eec2d943b8ed09dad393161d457139" package="Default">
    <docblock line="2">
      <description>kort - Webservice\DbProxy class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Webservice" line="12" package="Default">
      <extends/>
      <name>DbProxy</name>
      <full_name>\Webservice\DbProxy</full_name>
      <docblock line="9">
        <description>The DbProxy class is used wrap database request in REST calls to the datbase webservice.</description>
        <long-description></long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="19" namespace="Webservice" package="Default">
        <name>$wsConfig</name>
        <default></default>
        <docblock line="14">
          <description>Database webservice configuration.</description>
          <long-description></long-description>
          <tag line="14" name="var" description="" type="\Webservice\DbWebserviceConfig">
            <type by_reference="false">\Webservice\DbWebserviceConfig</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="26" namespace="Webservice" package="Default">
        <name>$table</name>
        <default></default>
        <docblock line="21">
          <description>Database table name.</description>
          <long-description></long-description>
          <tag line="21" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="Webservice" package="Default">
        <name>$fields</name>
        <default>array()</default>
        <docblock line="28">
          <description>Database table field names.</description>
          <long-description></long-description>
          <tag line="28" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="40" namespace="Webservice" package="Default">
        <name>$where</name>
        <default></default>
        <docblock line="35">
          <description>WHERE clause (condition).</description>
          <long-description></long-description>
          <tag line="35" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="47" namespace="Webservice" package="Default">
        <name>$orderBy</name>
        <default></default>
        <docblock line="42">
          <description>ORDER BY clause (sorting).</description>
          <long-description></long-description>
          <tag line="42" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="Webservice" package="Default">
        <name>$limit</name>
        <default></default>
        <docblock line="49">
          <description>Amount of records to return.</description>
          <long-description></long-description>
          <tag line="49" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="61" namespace="Webservice" package="Default">
        <name>$returnFields</name>
        <default></default>
        <docblock line="56">
          <description>Fields to return.</description>
          <long-description></long-description>
          <tag line="56" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="68" namespace="Webservice" package="Default">
        <name>$http</name>
        <default></default>
        <docblock line="63">
          <description>Http helper object to make requests.</description>
          <long-description></long-description>
          <tag line="63" name="var" description="" type="\Helper\HttpHelper">
            <type by_reference="false">\Helper\HttpHelper</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="76" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="70">
          <description>Create a new DbProxy object for a request.</description>
          <long-description></long-description>
          <tag line="70" name="param" description="Database table." type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="param" description="Database table fields." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$fields</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="89" package="Default">
        <name>isTransaction</name>
        <full_name>isTransaction</full_name>
        <docblock line="84">
          <description>Indicates wheter the requests runs in a transaction or not.</description>
          <long-description></long-description>
          <tag line="84" name="return" description="true if the request runs in a transation, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="99" package="Default">
        <name>getDbWebserviceConfig</name>
        <full_name>getDbWebserviceConfig</full_name>
        <docblock line="94">
          <description>Getter for $wsConfig.</description>
          <long-description></long-description>
          <tag line="94" name="return" description="the database webservice configuration" type="\Webservice\DbWebserviceConfig">
            <type by_reference="false">\Webservice\DbWebserviceConfig</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="111" package="Default">
        <name>setHttp</name>
        <full_name>setHttp</full_name>
        <docblock line="104">
          <description>Setter for http wrapper (only used by unit tests).</description>
          <long-description></long-description>
          <tag line="104" name="param" description="HTTP wrapper object." type="\Helper\HttpHelper" variable="$http">
            <type by_reference="false">\Helper\HttpHelper</type>
          </tag>
          <tag line="104" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="111">
          <name>$http</name>
          <default></default>
          <type>\Helper\HttpHelper</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="123" package="Default">
        <name>setFields</name>
        <full_name>setFields</full_name>
        <docblock line="116">
          <description>Setter for $fields.</description>
          <long-description></long-description>
          <tag line="116" name="param" description="Database table fields." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="116" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$fields</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="135" package="Default">
        <name>setReturnFields</name>
        <full_name>setReturnFields</full_name>
        <docblock line="128">
          <description>Setter for $returnFields.</description>
          <long-description></long-description>
          <tag line="128" name="param" description="The database table fields to return from the request." type="array" variable="$returnFields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="128" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="135">
          <name>$returnFields</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="147" package="Default">
        <name>setWhere</name>
        <full_name>setWhere</full_name>
        <docblock line="140">
          <description>Setter for $where.</description>
          <long-description></long-description>
          <tag line="140" name="param" description="The condition of the request." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="159" package="Default">
        <name>setOrderBy</name>
        <full_name>setOrderBy</full_name>
        <docblock line="152">
          <description>Setter for $orderBy.</description>
          <long-description></long-description>
          <tag line="152" name="param" description="The sorting of the result." type="string" variable="$orderBy">
            <type by_reference="false">string</type>
          </tag>
          <tag line="152" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="159">
          <name>$orderBy</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="171" package="Default">
        <name>setLimit</name>
        <full_name>setLimit</full_name>
        <docblock line="164">
          <description>Setter for $limit.</description>
          <long-description></long-description>
          <tag line="164" name="param" description="Amount of records to return." type="integer" variable="$limit">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="164" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="171">
          <name>$limit</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="181" package="Default">
        <name>select</name>
        <full_name>select</full_name>
        <docblock line="176">
          <description>Make a select request.</description>
          <long-description></long-description>
          <tag line="176" name="return" description="the result from the database" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="207" package="Default">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="200">
          <description>Make an insert request.</description>
          <long-description></long-description>
          <tag line="200" name="param" description="The data to insert." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="200" name="return" description="the result from the database (defined by $returnFields)" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="207">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="226" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="219">
          <description>Make an update request.</description>
          <long-description></long-description>
          <tag line="219" name="param" description="The data to update." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="219" name="return" description="the result from the database (defined by $returnFields)" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="226">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Webservice\DbProxyHandler.php" hash="911bac094d81886c7a8e2d0c18f238b2" package="Default">
    <docblock line="2">
      <description>kort - Webservice\DbProxyHandler class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="true" namespace="Webservice" line="14" package="Default">
      <extends/>
      <name>DbProxyHandler</name>
      <full_name>\Webservice\DbProxyHandler</full_name>
      <docblock line="9">
        <description>The DbProxyHandler class defines the functionality of a webservice handler.</description>
        <long-description>&lt;p&gt;DbProxyHandler relies on the DbProxy to relay it's requests.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="21" namespace="Webservice" package="Default">
        <name>$dbProxy</name>
        <default></default>
        <docblock line="16">
          <description>The datbase proxy object.</description>
          <long-description></long-description>
          <tag line="16" name="var" description="" type="\Webservice\DbProxy">
            <type by_reference="false">\Webservice\DbProxy</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="28" namespace="Webservice" package="Default">
        <name>$reader</name>
        <default></default>
        <docblock line="23">
          <description>The translation helper object.</description>
          <long-description></long-description>
          <tag line="23" name="var" description="" type="\Helper\LocaleHelper">
            <type by_reference="false">\Helper\LocaleHelper</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="33" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="30">
          <description>Initialized the DbProxyHandler object.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="46" package="Default">
        <name>setDbProxy</name>
        <full_name>setDbProxy</full_name>
        <docblock line="39">
          <description>Setter for $dbProxy.</description>
          <long-description></long-description>
          <tag line="39" name="param" description="New DbProxy object." type="\Webservice\DbProxy" variable="$proxy">
            <type by_reference="false">\Webservice\DbProxy</type>
          </tag>
          <tag line="39" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$proxy</name>
          <default></default>
          <type>\Webservice\DbProxy</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice" line="58" package="Default">
        <name>translate</name>
        <full_name>translate</full_name>
        <docblock line="51">
          <description>Translate a value to the users language.</description>
          <long-description></long-description>
          <tag line="51" name="param" description="The string to translate." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="51" name="return" description="the translated string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice" line="68" package="Default">
        <name>getDbProxy</name>
        <full_name>getDbProxy</full_name>
        <docblock line="63">
          <description>Getter for $dbProxy.</description>
          <long-description></long-description>
          <tag line="63" name="return" description="the dbProxy object" type="\Webservice\DbProxy">
            <type by_reference="false">\Webservice\DbProxy</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="Webservice" line="78" package="Default">
        <name>getTable</name>
        <full_name>getTable</full_name>
        <docblock line="73">
          <description>Returns the table fields used by this handler.</description>
          <long-description></long-description>
          <tag line="73" name="return" description="the table fields used by this handler." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="Webservice" line="85" package="Default">
        <name>getFields</name>
        <full_name>getFields</full_name>
        <docblock line="80">
          <description>Returns the table fields used by this handler.</description>
          <long-description></long-description>
          <tag line="80" name="return" description="the table fields used by this handler." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice" line="92" package="Default">
        <name>getReturnFields</name>
        <full_name>getReturnFields</full_name>
        <docblock line="87">
          <description>Return the returnFields for this handler.</description>
          <long-description></long-description>
          <tag line="87" name="return" description="database table fields" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice" line="104" package="Default">
        <name>insertParams</name>
        <full_name>insertParams</full_name>
        <docblock line="97">
          <description>Returns a parameter object to insert $data in a transaction.</description>
          <long-description></long-description>
          <tag line="97" name="param" description="Data to insert." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="97" name="return" description="the parameter object for the request" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Webservice\DbWebserviceConfig.php" hash="4b1db2d48dab31cf34190f676db0217d" package="Default">
    <docblock line="2">
      <description>kort - Webservice\DbWebserviceConfig class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Webservice" line="10" package="Default">
      <extends/>
      <name>DbWebserviceConfig</name>
      <full_name>\Webservice\DbWebserviceConfig</full_name>
      <docblock line="7">
        <description>Setup the url path to the db webservice.</description>
        <long-description></long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="17" namespace="Webservice" package="Default">
        <name>$url</name>
        <default>"http://kort.rdmr.ch/webservices/db"</default>
        <docblock line="12">
          <description>The URL of the database webservice.</description>
          <long-description></long-description>
          <tag line="12" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="24" package="Default">
        <name>getApiKey</name>
        <full_name>getApiKey</full_name>
        <docblock line="19">
          <description>Getter for the API key (which must be set in the environment.</description>
          <long-description></long-description>
          <tag line="19" name="return" description="the API key" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="34" package="Default">
        <name>getUrl</name>
        <full_name>getUrl</full_name>
        <docblock line="29">
          <description>Getter for $url.</description>
          <long-description></long-description>
          <tag line="29" name="return" description="the url of the database webservice" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="php\Webservice\Fix\FixHandler.php" hash="eeb62e7c74592e4116aed948a6b218f8" package="Default">
    <docblock line="2">
      <description>kort - Webservice\Fix\FixHandler class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Webservice\Fix" line="17" package="Default">
      <extends>\Webservice\DbProxyHandler</extends>
      <implements>\Webservice\IKoinCount</implements>
      <name>FixHandler</name>
      <full_name>\Webservice\Fix\FixHandler</full_name>
      <docblock line="14">
        <description>The FixHandler handles request to the fix webservice.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Fix" line="24" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="19">
          <description>Initialized the FixHandler object.</description>
          <long-description></long-description>
          <tag line="19" name="param" description="The database proxy object." type="\Webservice\TransactionDbProxy" variable="$dbProxy">
            <type by_reference="false">\Webservice\TransactionDbProxy</type>
          </tag>
        </docblock>
        <argument line="24">
          <name>$dbProxy</name>
          <default>null</default>
          <type>\Webservice\TransactionDbProxy</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Fix" line="39" package="Default">
        <name>getTable</name>
        <full_name>getTable</full_name>
        <docblock line="34">
          <description>Returns the table used by this handler.</description>
          <long-description></long-description>
          <tag line="34" name="return" description="the table name used by this handler." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Fix" line="49" package="Default">
        <name>getFields</name>
        <full_name>getFields</full_name>
        <docblock line="44">
          <description>Returns the table fields used by this handler.</description>
          <long-description></long-description>
          <tag line="44" name="return" description="the table fields used by this handler." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Fix" line="61" package="Default">
        <name>insertFix</name>
        <full_name>insertFix</full_name>
        <docblock line="54">
          <description>Saves a fix in the database and gives the user a reward for this action.</description>
          <long-description></long-description>
          <tag line="54" name="param" description="The fix data." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="54" name="return" description="return the JSON-encoded reward for the user of successful, false otherwise" type="string|bool">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Fix" line="81" package="Default">
        <name>getKoinCountQuery</name>
        <full_name>getKoinCountQuery</full_name>
        <docblock line="74">
          <description>Returns the query to find the koinCount for votes.</description>
          <long-description></long-description>
          <tag line="74" name="param" description="The inserted data." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="74" name="return" description="query to find the koinCount for votes" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Webservice\Highscore\HighscoreHandler.php" hash="b66d98fab68842d3b7ab9a080820643b" package="Default">
    <docblock line="2">
      <description>kort -Webservice\Highscore\HighscoreHandler class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Webservice\Highscore" line="14" package="Default">
      <extends>\Webservice\DbProxyHandler</extends>
      <name>HighscoreHandler</name>
      <full_name>\Webservice\Highscore\HighscoreHandler</full_name>
      <docblock line="11">
        <description>The HighscoreHandler handles request to the highscore webservice.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Highscore" line="21" package="Default">
        <name>getTable</name>
        <full_name>getTable</full_name>
        <docblock line="16">
          <description>Returns the table used by this handler.</description>
          <long-description></long-description>
          <tag line="16" name="return" description="the table name used by this handler." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Highscore" line="31" package="Default">
        <name>getFields</name>
        <full_name>getFields</full_name>
        <docblock line="26">
          <description>Returns the table fields used by this handler.</description>
          <long-description></long-description>
          <tag line="26" name="return" description="the table fields used by this handler." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Highscore" line="51" package="Default">
        <name>getHighscore</name>
        <full_name>getHighscore</full_name>
        <docblock line="44">
          <description>Return the current highscore with users, points etc.</description>
          <long-description></long-description>
          <tag line="44" name="param" description="The amount of entries this method should return." type="integer" variable="$limit">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="44" name="return" description="the JSON-encoded highscore if successful, false otherwise" type="string|bool">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$limit</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Webservice\Highscore" line="72" package="Default">
        <name>isYourScore</name>
        <full_name>isYourScore</full_name>
        <docblock line="65">
          <description>Adds a field to a score to indicate wheter a user is the currently logged in user or not.</description>
          <long-description></long-description>
          <tag line="65" name="param" description="The score data." type="array" variable="$score">
            <type by_reference="false">array</type>
          </tag>
          <tag line="65" name="return" description="the $score array with an additional field &quot;you&quot;" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$score</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Webservice\Highscore" line="87" package="Default">
        <name>setGravatarUrl</name>
        <full_name>setGravatarUrl</full_name>
        <docblock line="80">
          <description>Replaces field "oauth_user_id" with "pic_url".</description>
          <long-description></long-description>
          <tag line="80" name="param" description="The score data." type="array" variable="$score">
            <type by_reference="false">array</type>
          </tag>
          <tag line="80" name="return" description="the $score array with the replaced field" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$score</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Webservice\IKoinCount.php" hash="f0df91251284b4e5c2243d5ab8491ce8" package="Default">
    <docblock line="2">
      <description>kort - Webservice\IKoinCount interface</description>
      <long-description></long-description>
    </docblock>
    <interface namespace="Webservice" line="11" package="Default">
      <name>IKoinCount</name>
      <full_name>\Webservice\IKoinCount</full_name>
      <docblock line="8">
        <description>This interface describes common methods for koin count manipulating webservice handlers.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="20" package="Default">
        <name>getKoinCountQuery</name>
        <full_name>getKoinCountQuery</full_name>
        <docblock line="13">
          <description>Returns a query to find the koinCount.</description>
          <long-description></long-description>
          <tag line="13" name="param" description="The inserted data." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="13" name="return" description="query to find the koinCount for votes" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="20">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </interface>
  </file>
  <file path="php\Webservice\Osm\OsmHandler.php" hash="fe5608626e6217dcdb592b735c2b1b93" package="Default">
    <docblock line="2">
      <description>kort - Webservice\Osm\OsmHandler class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Webservice\Osm" line="12" package="Default">
      <extends/>
      <name>OsmHandler</name>
      <full_name>\Webservice\Osm\OsmHandler</full_name>
      <docblock line="9">
        <description>The OsmHandler class handles the requests to the osm webservice.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Osm" line="24" package="Default">
        <name>getOsmData</name>
        <full_name>getOsmData</full_name>
        <docblock line="14">
          <description>Returns the details for the requested OpenStreetMap object.</description>
          <long-description>&lt;p&gt;This method directly calls the OpenStreetMap API.&lt;/p&gt;</long-description>
          <tag line="14" name="param" description="The object type, either point, way or relation." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="14" name="param" description="The object id." type="integer" variable="$id">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="14" name="return" description="the details of the requested OpenStreetMap object" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="24">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="24">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Webservice\RewardHandler.php" hash="fded29002eac8b996af6e0dcf0c83664" package="Default">
    <docblock line="2">
      <description>kort - Webservice\RewardHandler class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Webservice" line="13" package="Default">
      <extends/>
      <name>RewardHandler</name>
      <full_name>\Webservice\RewardHandler</full_name>
      <docblock line="10">
        <description>The RewardHandler class takes care of webservices that return rewards to the user.</description>
        <long-description></long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="20" namespace="Webservice" package="Default">
        <name>$transProxy</name>
        <default></default>
        <docblock line="15">
          <description>The TransactionDbProxy to which the rewards statements are added.</description>
          <long-description></long-description>
          <tag line="15" name="var" description="" type="\Webservice\TransactionDbProxy">
            <type by_reference="false">\Webservice\TransactionDbProxy</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="27" namespace="Webservice" package="Default">
        <name>$koinCountHandler</name>
        <default></default>
        <docblock line="22">
          <description>The handler which defines which koinCounts should be applied.</description>
          <long-description></long-description>
          <tag line="22" name="var" description="" type="\Webservice\IKoinCount">
            <type by_reference="false">\Webservice\IKoinCount</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="Webservice" package="Default">
        <name>$positions</name>
        <default>array()</default>
        <docblock line="29">
          <description>This array keeps track which transaction statement is at which position.</description>
          <long-description>&lt;p&gt;To extract the results from the database response, it's important to have
a mapping from the statements to the return value.&lt;/p&gt;</long-description>
          <tag line="29" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Webservice" line="47" package="Default">
        <name>updateKoinCountParams</name>
        <full_name>updateKoinCountParams</full_name>
        <docblock line="39">
          <description>Return sql statements parameter to update the koin_count of a user.</description>
          <long-description></long-description>
          <tag line="39" name="param" description="The user id." type="integer" variable="$user_id">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="39" name="param" description="The query to find the koiCount." type="string" variable="$koinCountQuery">
            <type by_reference="false">string</type>
          </tag>
          <tag line="39" name="return" description="Parameter array." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$user_id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="47">
          <name>$koinCountQuery</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Webservice" line="67" package="Default">
        <name>getHighscoreBadgesParams</name>
        <full_name>getHighscoreBadgesParams</full_name>
        <docblock line="60">
          <description>Return sql statements parameter to check for the highscore* badges.</description>
          <long-description></long-description>
          <tag line="60" name="param" description="Vote data." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="60" name="return" description="Parameter array." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Webservice" line="93" package="Default">
        <name>getVoteCountBadgesParams</name>
        <full_name>getVoteCountBadgesParams</full_name>
        <docblock line="86">
          <description>Return sql statements parameter to check for the vote_count* badges.</description>
          <long-description></long-description>
          <tag line="86" name="param" description="Vote data." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="86" name="return" description="Parameter array." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Webservice" line="121" package="Default">
        <name>getFixCountBadgesParams</name>
        <full_name>getFixCountBadgesParams</full_name>
        <docblock line="114">
          <description>Return sql statements parameter to check for the fix_count* badges.</description>
          <long-description></long-description>
          <tag line="114" name="param" description="Vote data." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="114" name="return" description="Parameter array." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="147" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="141">
          <description>Create a new RewardHandler.</description>
          <long-description></long-description>
          <tag line="141" name="param" description="The database proxy to handle the data." type="\Webservice\TransactionDbProxy" variable="$transProxy">
            <type by_reference="false">\Webservice\TransactionDbProxy</type>
          </tag>
          <tag line="141" name="param" description="A koin-count manipulating handler." type="\Webservice\IKoinCount" variable="$koinCountHandler">
            <type by_reference="false">\Webservice\IKoinCount</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$transProxy</name>
          <default></default>
          <type>\Webservice\TransactionDbProxy</type>
        </argument>
        <argument line="147">
          <name>$koinCountHandler</name>
          <default></default>
          <type>\Webservice\IKoinCount</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="160" package="Default">
        <name>applyRewards</name>
        <full_name>applyRewards</full_name>
        <docblock line="153">
          <description>Applies rewards for the users actions.</description>
          <long-description></long-description>
          <tag line="153" name="param" description="The data from the users action." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="153" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice" line="173" package="Default">
        <name>updateBadges</name>
        <full_name>updateBadges</full_name>
        <docblock line="166">
          <description>Checks if the user won any new badges.</description>
          <long-description></long-description>
          <tag line="166" name="param" description="The data from the user." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="166" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="173">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice" line="192" package="Default">
        <name>updateKoinCount</name>
        <full_name>updateKoinCount</full_name>
        <docblock line="185">
          <description>Credit the user with koins for his action.</description>
          <long-description></long-description>
          <tag line="185" name="param" description="The data from the user." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="185" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="192">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="207" package="Default">
        <name>extractReward</name>
        <full_name>extractReward</full_name>
        <docblock line="200">
          <description>Extracts the rewards (koins, badges) from the database response.</description>
          <long-description></long-description>
          <tag line="200" name="param" description="The response from the database." type="array" variable="$result">
            <type by_reference="false">array</type>
          </tag>
          <tag line="200" name="return" description="" type="\Model\Reward">
            <type by_reference="false">\Model\Reward</type>
          </tag>
        </docblock>
        <argument line="207">
          <name>$result</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice" line="223" package="Default">
        <name>extractAllBadges</name>
        <full_name>extractAllBadges</full_name>
        <docblock line="216">
          <description>Extracts all the won badges from the response of the database.</description>
          <long-description></long-description>
          <tag line="216" name="param" description="The response from the database." type="array" variable="$result">
            <type by_reference="false">array</type>
          </tag>
          <tag line="216" name="return" description="All won badges" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="223">
          <name>$result</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice" line="242" package="Default">
        <name>extractBadges</name>
        <full_name>extractBadges</full_name>
        <docblock line="235">
          <description>Extracts the won badges of one kind from the response of the database.</description>
          <long-description></long-description>
          <tag line="235" name="param" description="The database response for on kind of badges." type="array" variable="$badgesData">
            <type by_reference="false">array</type>
          </tag>
          <tag line="235" name="return" description="All won badges of one kind." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="242">
          <name>$badgesData</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice" line="262" package="Default">
        <name>extractKoinCountNew</name>
        <full_name>extractKoinCountNew</full_name>
        <docblock line="255">
          <description>Extracts the amount of new koins from the database response.</description>
          <long-description></long-description>
          <tag line="255" name="param" description="The response from the database." type="array" variable="$result">
            <type by_reference="false">array</type>
          </tag>
          <tag line="255" name="return" description="The amount of koins a user has won" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="262">
          <name>$result</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice" line="275" package="Default">
        <name>extractKoinCountTotal</name>
        <full_name>extractKoinCountTotal</full_name>
        <docblock line="268">
          <description>Extracts the new total amount of koins of a user from the database response.</description>
          <long-description></long-description>
          <tag line="268" name="param" description="The response from the database." type="array" variable="$result">
            <type by_reference="false">array</type>
          </tag>
          <tag line="268" name="return" description="The new total amount of koins of a user." type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="275">
          <name>$result</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Webservice\TransactionDbProxy.php" hash="c2f3dbcd4dbf3a7986e091a017d3c1d4" package="Default">
    <docblock line="2">
      <description>kort - Webservice\TransactionDbProxy class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Webservice" line="12" package="Default">
      <extends>\Webservice\DbProxy</extends>
      <name>TransactionDbProxy</name>
      <full_name>\Webservice\TransactionDbProxy</full_name>
      <docblock line="9">
        <description>The TransactionDbProxy class runs several statements in one request in one transaction.</description>
        <long-description></long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="19" namespace="Webservice" package="Default">
        <name>$statements</name>
        <default>array()</default>
        <docblock line="14">
          <description>Statements to run in the transaction.</description>
          <long-description></long-description>
          <tag line="14" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="24" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="21">
          <description>Creates a new TransactionDbProxy object.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="34" package="Default">
        <name>sendTransaction</name>
        <full_name>sendTransaction</full_name>
        <docblock line="29">
          <description>Makes a request for the whole transaction.</description>
          <long-description></long-description>
          <tag line="29" name="return" description="array with an entry for each statments result." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="52" package="Default">
        <name>isTransaction</name>
        <full_name>isTransaction</full_name>
        <docblock line="47">
          <description>Indicates wheter the requests runs in a transaction or not.</description>
          <long-description></long-description>
          <tag line="47" name="return" description="true if the request runs in a transation, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice" line="62" package="Default">
        <name>clearTransaction</name>
        <full_name>clearTransaction</full_name>
        <docblock line="57">
          <description>Removes all statements from this object.</description>
          <long-description></long-description>
          <tag line="57" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice" line="74" package="Default">
        <name>addToTransaction</name>
        <full_name>addToTransaction</full_name>
        <docblock line="67">
          <description>Adds a new statement as a parameter array to the transaction.</description>
          <long-description></long-description>
          <tag line="67" name="param" description="Parameter object describing the statement to execute." type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="67" name="return" description="position in the transaction" type="\Webservice\the">
            <type by_reference="false">\Webservice\the</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Webservice\User\UserBadgesHandler.php" hash="6784200d959cdaaaf9228a3ce9346d52" package="Default">
    <docblock line="2">
      <description>kort - Webservice\User\UserBadgesHandler class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Webservice\User" line="12" package="Default">
      <extends>\Webservice\DbProxyHandler</extends>
      <name>UserBadgesHandler</name>
      <full_name>\Webservice\User\UserBadgesHandler</full_name>
      <docblock line="9">
        <description>The UserBadgesHandler class handles requests to the user/badges webservice.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\User" line="19" package="Default">
        <name>getTable</name>
        <full_name>getTable</full_name>
        <docblock line="14">
          <description>Returns the table used by this handler.</description>
          <long-description></long-description>
          <tag line="14" name="return" description="the table name used by this handler." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\User" line="29" package="Default">
        <name>getFields</name>
        <full_name>getFields</full_name>
        <docblock line="24">
          <description>Returns the table fields used by this handler.</description>
          <long-description></long-description>
          <tag line="24" name="return" description="the table fields used by this handler." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\User" line="48" package="Default">
        <name>getUserBadges</name>
        <full_name>getUserBadges</full_name>
        <docblock line="41">
          <description>Returns all badges and marks the won badges for the user.</description>
          <long-description></long-description>
          <tag line="41" name="param" description="The users id." type="integer" variable="$user_id">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="41" name="return" description="the JSON-encoded badges is successful, false otherwise" type="string|bool">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$user_id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\User" line="79" package="Default">
        <name>convertBoolean</name>
        <full_name>convertBoolean</full_name>
        <docblock line="72">
          <description>Converts the string values from the database to "real" boolean values.</description>
          <long-description></long-description>
          <tag line="72" name="param" description="The badge data." type="array" variable="$badge">
            <type by_reference="false">array</type>
          </tag>
          <tag line="72" name="return" description="the $badge data with fixed boolean values" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$badge</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Webservice\User\UserGetHandler.php" hash="ad5d42ebcd3041fa93588c2596017ae7" package="Default">
    <docblock line="2">
      <description>kort - Webservice\User\UserGetHandler class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Webservice\User" line="13" package="Default">
      <extends>\Webservice\DbProxyHandler</extends>
      <name>UserGetHandler</name>
      <full_name>\Webservice\User\UserGetHandler</full_name>
      <docblock line="10">
        <description>The UserGetHandler class handles all GET requests to the user webservice.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\User" line="20" package="Default">
        <name>getTable</name>
        <full_name>getTable</full_name>
        <docblock line="15">
          <description>Returns the database table to be used with this Handler.</description>
          <long-description></long-description>
          <tag line="15" name="return" description="database table as a string" type="\Webservice\User\the">
            <type by_reference="false">\Webservice\User\the</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\User" line="30" package="Default">
        <name>getFields</name>
        <full_name>getFields</full_name>
        <docblock line="25">
          <description>Returns the database fields to be used with this Handler.</description>
          <long-description></long-description>
          <tag line="25" name="return" description="array of database fields" type="\Webservice\User\an">
            <type by_reference="false">\Webservice\User\an</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\User" line="53" package="Default">
        <name>getUserBySecret</name>
        <full_name>getUserBySecret</full_name>
        <docblock line="46">
          <description>Returns a user identified by his specific secret.</description>
          <long-description></long-description>
          <tag line="46" name="param" description="The user's secret." type="string" variable="$secret">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="return" description="JSON encoded user information" type="\Webservice\User\the">
            <type by_reference="false">\Webservice\User\the</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$secret</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\User" line="81" package="Default">
        <name>getUserByOAuthUserId</name>
        <full_name>getUserByOAuthUserId</full_name>
        <docblock line="74">
          <description>Returns a user json found by the OAuth user_id.</description>
          <long-description></long-description>
          <tag line="74" name="param" description="The unqiue identifier of the oauth provider." type="string" variable="$oauth_user_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="74" name="return" description="a JSON-encoded user object if successfull, false otherwise" type="string|bool">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$oauth_user_id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\User" line="103" package="Default">
        <name>getDefaultUserJson</name>
        <full_name>getDefaultUserJson</full_name>
        <docblock line="98">
          <description>Returns a default user, which is used when the user is not yet logged in.</description>
          <long-description></long-description>
          <tag line="98" name="return" description="the JSON-encoded default user object" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="php\Webservice\User\UserHandler.php" hash="3fb6e793a77ec5d1134a461c913ce09b" package="Default">
    <docblock line="2">
      <description>kort - Webservice\User\UserHandler class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Webservice\User" line="12" package="Default">
      <extends>\Webservice\DbProxyHandler</extends>
      <name>UserHandler</name>
      <full_name>\Webservice\User\UserHandler</full_name>
      <docblock line="9">
        <description>The UserHandler class handles all POST and PUT requests to the user webservice.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\User" line="19" package="Default">
        <name>getTable</name>
        <full_name>getTable</full_name>
        <docblock line="14">
          <description>Returns the database table to be used with this Handler.</description>
          <long-description></long-description>
          <tag line="14" name="return" description="database table as a string" type="\Webservice\User\the">
            <type by_reference="false">\Webservice\User\the</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\User" line="29" package="Default">
        <name>getFields</name>
        <full_name>getFields</full_name>
        <docblock line="24">
          <description>Returns the database fields to be used with this Handler.</description>
          <long-description></long-description>
          <tag line="24" name="return" description="array of database fields" type="\Webservice\User\an">
            <type by_reference="false">\Webservice\User\an</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\User" line="47" package="Default">
        <name>getReturnFields</name>
        <full_name>getReturnFields</full_name>
        <docblock line="42">
          <description>Return the database fields to return when executing insert or update.</description>
          <long-description></long-description>
          <tag line="42" name="return" description="of database fields" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\User" line="66" package="Default">
        <name>updateUser</name>
        <full_name>updateUser</full_name>
        <docblock line="58">
          <description>Updates a user with newer data.</description>
          <long-description></long-description>
          <tag line="58" name="param" description="The user id." type="integer" variable="$id">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="58" name="param" description="The user data." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="58" name="return" description="JSON-encoded updated user" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="66">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\User" line="80" package="Default">
        <name>insertUser</name>
        <full_name>insertUser</full_name>
        <docblock line="73">
          <description>Insert a new user.</description>
          <long-description></long-description>
          <tag line="73" name="param" description="The user data." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="73" name="return" description="JSON-encoded user" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="php\Webservice\Validation\ValidationHandler.php" hash="e8d64c5cf7180e2cdae227f8511673b0" package="Default">
    <docblock line="2">
      <description>kort - Webservice\Validation\ValidationHandler class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Webservice\Validation" line="13" package="Default">
      <extends>\Webservice\DbProxyHandler</extends>
      <name>ValidationHandler</name>
      <full_name>\Webservice\Validation\ValidationHandler</full_name>
      <docblock line="10">
        <description>The ValidationHandler class handles requests to the validation webservice.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Validation" line="20" package="Default">
        <name>getTable</name>
        <full_name>getTable</full_name>
        <docblock line="15">
          <description>Returns the database table to be used with this Handler.</description>
          <long-description></long-description>
          <tag line="15" name="return" description="database table as a string." type="\Webservice\Validation\the">
            <type by_reference="false">\Webservice\Validation\the</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Validation" line="30" package="Default">
        <name>getFields</name>
        <full_name>getFields</full_name>
        <docblock line="25">
          <description>Returns the database fields to be used with this Handler.</description>
          <long-description></long-description>
          <tag line="25" name="return" description="array of database fields" type="\Webservice\Validation\an">
            <type by_reference="false">\Webservice\Validation\an</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Validation" line="60" package="Default">
        <name>getValidationsByOwnPosition</name>
        <full_name>getValidationsByOwnPosition</full_name>
        <docblock line="50">
          <description>Return the validations around the users current position.</description>
          <long-description></long-description>
          <tag line="50" name="param" description="User positions latitude." type="float" variable="$lat">
            <type by_reference="false">float</type>
          </tag>
          <tag line="50" name="param" description="User positions longitude." type="float" variable="$lng">
            <type by_reference="false">float</type>
          </tag>
          <tag line="50" name="param" description="Amount of validations to return." type="integer" variable="$limit">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="50" name="param" description="Radius around the user position to look for validations." type="integer" variable="$radius">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="50" name="return" description="JSON-encoded validations around the users current position" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$lat</name>
          <default></default>
          <type/>
        </argument>
        <argument line="60">
          <name>$lng</name>
          <default></default>
          <type/>
        </argument>
        <argument line="60">
          <name>$limit</name>
          <default></default>
          <type/>
        </argument>
        <argument line="60">
          <name>$radius</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="64">Use the radius and get a fast result</todo>
    </markers>
  </file>
  <file path="php\Webservice\Vote\VoteHandler.php" hash="1140fe6ee09291cebdf4d3b01eebc500" package="Default">
    <docblock line="2">
      <description>kort - Webservice\Vote\VoteHandler class</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Webservice\Vote" line="17" package="Default">
      <extends>\Webservice\DbProxyHandler</extends>
      <implements>\Webservice\IKoinCount</implements>
      <name>VoteHandler</name>
      <full_name>\Webservice\Vote\VoteHandler</full_name>
      <docblock line="14">
        <description>The VoteHandler class handles requests to the vote webservice.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Vote" line="24" package="Default">
        <name>getTable</name>
        <full_name>getTable</full_name>
        <docblock line="19">
          <description>Returns the database table to be used with this Handler.</description>
          <long-description></long-description>
          <tag line="19" name="return" description="database table as a string" type="\Webservice\Vote\the">
            <type by_reference="false">\Webservice\Vote\the</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Vote" line="34" package="Default">
        <name>getFields</name>
        <full_name>getFields</full_name>
        <docblock line="29">
          <description>Returns the database fields to be used with this Handler.</description>
          <long-description></long-description>
          <tag line="29" name="return" description="array of database fields" type="\Webservice\Vote\an">
            <type by_reference="false">\Webservice\Vote\an</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Webservice\Vote" line="46" package="Default">
        <name>getCompletedParams</name>
        <full_name>getCompletedParams</full_name>
        <docblock line="39">
          <description>Return sql statements parameter to set fixes to completed if they reached the threshold.</description>
          <long-description></long-description>
          <tag line="39" name="param" description="Vote data." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="39" name="return" description="Parameter array." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Vote" line="69" package="Default">
        <name>insertVote</name>
        <full_name>insertVote</full_name>
        <docblock line="62">
          <description>Insert a new vote and handle the corresponding changes (koin_count, badges, completed etc.).</description>
          <long-description></long-description>
          <tag line="62" name="param" description="Vote data." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="62" name="return" description="JSON-encoded reward for the user." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Webservice\Vote" line="92" package="Default">
        <name>getKoinCountQuery</name>
        <full_name>getKoinCountQuery</full_name>
        <docblock line="85">
          <description>Returns the query to find the koinCount for votes.</description>
          <long-description></long-description>
          <tag line="85" name="param" description="The inserted data." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="85" name="return" description="query to find the koinCount for votes" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="92">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="webservices\answer\index.php" hash="7d7e02408bd79cc7ee2e1889c6283521" package="Default">
    <docblock line="2">
      <description>kort - the /answer webservices</description>
      <long-description></long-description>
    </docblock>
    <include line="7" type="Require Once" package="Default">
      <name>../../../lib/Slim-2.1.0/Slim/Slim.php</name>
      <docblock line="6">
        <description>Load Slim library</description>
        <long-description></long-description>
      </docblock>
    </include>
    <include line="9" type="Require Once" package="Default">
      <name>../../../server/php/ClassLoader.php</name>
      <docblock line="8">
        <description>Load ClassLoader</description>
        <long-description></long-description>
      </docblock>
    </include>
  </file>
  <file path="webservices\bug\index.php" hash="4f098a96ed1d5913a527f4d7698a1f72" package="Default">
    <docblock line="2">
      <description>kort - the /bug webservices</description>
      <long-description></long-description>
    </docblock>
    <include line="7" type="Require Once" package="Default">
      <name>../../../lib/Slim-2.1.0/Slim/Slim.php</name>
      <docblock line="6">
        <description>Load Slim library</description>
        <long-description></long-description>
      </docblock>
    </include>
    <include line="9" type="Require Once" package="Default">
      <name>../../../server/php/ClassLoader.php</name>
      <docblock line="8">
        <description>Load ClassLoader</description>
        <long-description></long-description>
      </docblock>
    </include>
  </file>
  <file path="webservices\db\index.php" hash="185207c27f6b1595a2669cff8a68da4a" package="Default">
    <docblock line="2">
      <description>kort - the /db webservices</description>
      <long-description></long-description>
    </docblock>
    <include line="7" type="Require Once" package="Default">
      <name>../../../lib/Slim-2.1.0/Slim/Slim.php</name>
      <docblock line="6">
        <description>Load Slim library</description>
        <long-description></long-description>
      </docblock>
    </include>
    <include line="9" type="Require Once" package="Default">
      <name>../../../server/php/ClassLoader.php</name>
      <docblock line="8">
        <description>Load ClassLoader</description>
        <long-description></long-description>
      </docblock>
    </include>
  </file>
  <file path="webservices\highscore\index.php" hash="b4de2ee0e5ddc03bc743a6cab5230669" package="Default">
    <docblock line="2">
      <description>kort - the /highscore webservices</description>
      <long-description></long-description>
    </docblock>
    <include line="7" type="Require Once" package="Default">
      <name>../../../lib/Slim-2.1.0/Slim/Slim.php</name>
      <docblock line="6">
        <description>Load Slim library</description>
        <long-description></long-description>
      </docblock>
    </include>
    <include line="9" type="Require Once" package="Default">
      <name>../../../server/php/ClassLoader.php</name>
      <docblock line="8">
        <description>Load ClassLoader</description>
        <long-description></long-description>
      </docblock>
    </include>
  </file>
  <file path="webservices\osm\index.php" hash="2c368992ec158fb4430c08677f10fc9b" package="Default">
    <docblock line="2">
      <description>kort - the /osm webservices</description>
      <long-description></long-description>
    </docblock>
    <include line="7" type="Require Once" package="Default">
      <name>../../../lib/Slim-2.1.0/Slim/Slim.php</name>
      <docblock line="6">
        <description>Load Slim library</description>
        <long-description></long-description>
      </docblock>
    </include>
    <include line="9" type="Require Once" package="Default">
      <name>../../../server/php/ClassLoader.php</name>
      <docblock line="8">
        <description>Load ClassLoader</description>
        <long-description></long-description>
      </docblock>
    </include>
  </file>
  <file path="webservices\update\index.php" hash="c512b34a4ec0a295cefe144e55526bfe" package="Default">
    <docblock line="2">
      <description>kort - the /update webservices</description>
      <long-description></long-description>
    </docblock>
    <include line="7" type="Require Once" package="Default">
      <name>../../../lib/Slim-2.1.0/Slim/Slim.php</name>
      <docblock line="6">
        <description>Load Slim library</description>
        <long-description></long-description>
      </docblock>
    </include>
  </file>
  <file path="webservices\user\index.php" hash="9cbee4a8cfd78fec66fc2529d4175154" package="Default">
    <docblock line="2">
      <description>kort - the /user webservices</description>
      <long-description></long-description>
    </docblock>
    <include line="7" type="Require Once" package="Default">
      <name>../../../lib/Slim-2.1.0/Slim/Slim.php</name>
      <docblock line="6">
        <description>Load Slim library</description>
        <long-description></long-description>
      </docblock>
    </include>
    <include line="9" type="Require Once" package="Default">
      <name>../../../server/php/ClassLoader.php</name>
      <docblock line="8">
        <description>Load ClassLoader</description>
        <long-description></long-description>
      </docblock>
    </include>
  </file>
  <file path="webservices\validation\index.php" hash="7487c5512f1aa1dce8bc4655c93a1b79" package="Default">
    <docblock line="2">
      <description>kort - the /validation webservices.</description>
      <long-description></long-description>
    </docblock>
    <include line="7" type="Require Once" package="Default">
      <name>../../../lib/Slim-2.1.0/Slim/Slim.php</name>
      <docblock line="6">
        <description>Load Slim library</description>
        <long-description></long-description>
      </docblock>
    </include>
    <include line="9" type="Require Once" package="Default">
      <name>../../../server/php/ClassLoader.php</name>
      <docblock line="8">
        <description>Load ClassLoader</description>
        <long-description></long-description>
      </docblock>
    </include>
  </file>
  <package name="Default" full_name="Default"/>
  <namespace name="Helper" full_name="Helper"/>
  <namespace name="Kort" full_name="Kort"/>
  <namespace name="Model" full_name="Model"/>
  <namespace name="OAuth" full_name="OAuth"/>
  <namespace name="TestHelper" full_name="TestHelper"/>
  <namespace name="Webservice" full_name="Webservice">
    <namespace name="Answer" full_name="Webservice\Answer"/>
    <namespace name="Bug" full_name="Webservice\Bug"/>
    <namespace name="Database" full_name="Webservice\Database"/>
    <namespace name="Fix" full_name="Webservice\Fix"/>
    <namespace name="Highscore" full_name="Webservice\Highscore"/>
    <namespace name="Osm" full_name="Webservice\Osm"/>
    <namespace name="User" full_name="Webservice\User"/>
    <namespace name="Validation" full_name="Webservice\Validation"/>
    <namespace name="Vote" full_name="Webservice\Vote"/>
  </namespace>
  <marker count="3">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
